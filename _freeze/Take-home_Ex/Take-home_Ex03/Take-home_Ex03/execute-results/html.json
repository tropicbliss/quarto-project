{
  "hash": "10b72b32f6957eee76211e43cf5b0bdc",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take Home Exercise 3\"\nauthor: \"Eugene Toh\"\ndate: \"last-modified\"\nexecute:\n  freeze: true\n---\n\n\nThe Philippines' \"War on Drugs,\" initiated under President Rodrigo Duterte's administration in 2016, represents one of the most controversial law enforcement campaigns in recent Southeast Asian history. This study employs advanced geospatial analytical techniques to examine the spatial and temporal distribution of drug-related killings across the Philippine archipelago from 2016 to 2024. Through Spatial Point Patterns Analysis and Spatio-Temporal Point Patterns Analysis, this research seeks to identify potential geographic clustering of incidents and evaluate the evolving pattern of cases across two presidential administrations. By analyzing the geographic distribution and temporal trends of these events, this study aims to provide empirical insights into both the implementation of the anti-drug campaign under both President Duterte's and President Ferdinand Marcos Jr.'s administration, contributing to a data-driven understanding of this significant public policy issue.\n\n# Main data processing\n\n## Import dependencies\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, tidyverse, tmap, spdep, knitr)\n```\n:::\n\n\n## Import data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprovinces_sf <- st_read(\"data\", layer = \"phl_admbnda_adm2_psa_namria_20231106\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `phl_admbnda_adm2_psa_namria_20231106' from data source \n  `/home/tropicbliss/GitHub/quarto-project/Take-home_Ex/Take-home_Ex03/data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 13 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 114.2779 ymin: 4.587294 xmax: 126.605 ymax: 21.12189\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\ndrugs_data <- read_csv(\"data/2016-01-01-2024-06-30-Philippines.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 6921 Columns: 31\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (23): event_id_cnty, event_date, disorder_type, event_type, sub_event_ty...\ndbl  (8): year, time_precision, iso, latitude, longitude, geo_precision, fat...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\ntm_shape(provinces_sf) +\n  tm_polygons() +\n  tm_text(\"ADM2_EN\", col = \"blue\", size = 0.5, remove.overlap = TRUE)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n\n## Data wrangling\n\nTo combine the geographical spatial data with the aspatial drug cases data, we need to make sure that the province names in both data-frames are normalised.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncan_be_left_joined <- all(provinces_sf$ADM2_EN %in% drugs_data$admin2)\ncan_be_left_joined\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n:::\n\n\nIt seems like not all province names in `drugs_data` is found in `provinces_sf`. This could be due to irregular naming conventions. Let's see what are the discrepancies.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# values in provinces_sf not in drugs_data\nnon_matching_values <- setdiff(provinces_sf$ADM2_EN, drugs_data$admin2)\nnon_matching_values\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Batanes\"                             \"Aurora\"                             \n [3] \"Eastern Samar\"                       \"Samar (Western Samar)\"              \n [5] \"Biliran\"                             \"City of Isabela (not a province)\"   \n [7] \"Camiguin\"                            \"Davao de Oro (Compostela Valley)\"   \n [9] \"Cotabato (North Cotabato)\"           \"Metropolitan Manila First District\" \n[11] \"Metropolitan Manila Second District\" \"Metropolitan Manila Third District\" \n[13] \"Metropolitan Manila Fourth District\" \"Mountain Province\"                  \n[15] \"Dinagat Islands\"                     \"Marinduque\"                         \n[17] \"Romblon\"                             \"Special Geographic Area\"            \n```\n\n\n:::\n:::\n\n\nAs we can see, we have 18 province names that are not found in `drugs_data`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique_values <- sort(unique(drugs_data$admin2))\nunique_values\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Abra\"                  \"Agusan del Norte\"      \"Agusan del Sur\"       \n [4] \"Aklan\"                 \"Albay\"                 \"Antique\"              \n [7] \"Apayao\"                \"Basilan\"               \"Bataan\"               \n[10] \"Batangas\"              \"Benguet\"               \"Bohol\"                \n[13] \"Bukidnon\"              \"Bulacan\"               \"Cagayan\"              \n[16] \"Camarines Norte\"       \"Camarines Sur\"         \"Capiz\"                \n[19] \"Catanduanes\"           \"Cavite\"                \"Cebu\"                 \n[22] \"Cotabato\"              \"Davao de Oro\"          \"Davao del Norte\"      \n[25] \"Davao del Sur\"         \"Davao Occidental\"      \"Davao Oriental\"       \n[28] \"Guimaras\"              \"Ifugao\"                \"Ilocos Norte\"         \n[31] \"Ilocos Sur\"            \"Iloilo\"                \"Isabela\"              \n[34] \"Kalinga\"               \"La Union\"              \"Laguna\"               \n[37] \"Lanao del Norte\"       \"Lanao del Sur\"         \"Leyte\"                \n[40] \"Maguindanao del Norte\" \"Maguindanao del Sur\"   \"Masbate\"              \n[43] \"Metropolitan Manila\"   \"Misamis Occidental\"    \"Misamis Oriental\"     \n[46] \"Negros Occidental\"     \"Negros Oriental\"       \"Northern Samar\"       \n[49] \"Nueva Ecija\"           \"Nueva Vizcaya\"         \"Occidental Mindoro\"   \n[52] \"Oriental Mindoro\"      \"Palawan\"               \"Pampanga\"             \n[55] \"Pangasinan\"            \"Quezon\"                \"Quirino\"              \n[58] \"Rizal\"                 \"Samar\"                 \"Sarangani\"            \n[61] \"Siquijor\"              \"Sorsogon\"              \"South Cotabato\"       \n[64] \"Southern Leyte\"        \"Sultan Kudarat\"        \"Sulu\"                 \n[67] \"Surigao del Norte\"     \"Surigao del Sur\"       \"Tarlac\"               \n[70] \"Tawi-Tawi\"             \"Zambales\"              \"Zamboanga del Norte\"  \n[73] \"Zamboanga del Sur\"     \"Zamboanga Sibugay\"    \n```\n\n\n:::\n:::\n\n\nHowever, upon further analysis the names seem to all be in order, except the fact that the provinces of Aurora, Batanes, Biliran, Camiguin, Dinagat Islands, Eastern Samar, Ilocos Norte, Romblon are not mentioned in the drug data. It seems like no drug cases has ever been reported according to our data from the year 2016 to 2024.\n\nMany of these areas (Batanes, Camiguin, Dinagat Islands, Romblon) are island provinces and Aurora and Eastern Samar are relatively remote. These areas have more dispersed populations and are less accessible, and hence limited infrastructure might affect both drug trafficking and reporting.\n\nLet's map it out to see what this is all about.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnot_in_data <- c(\"Aurora\", \"Batanes\", \"Biliran\", \"Camiguin\", \"Dinagat Islands\", \"Eastern Samar\", \"Mountain Province\", \"Romblon\")\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\ntm_shape(provinces_sf) +\n  tm_polygons() +\n  tm_shape(provinces_sf %>% filter(ADM2_EN %in% not_in_data)) +\n  tm_polygons(col = \"red\") +\n  tm_text(\"ADM2_EN\", col = \"black\", remove.overlap = TRUE)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\nNow, we need to rename the province names in both sets of data to make them consistent so joining can occur.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrugs_data <- drugs_data %>% mutate(admin2 = recode(admin2, \"Metropolitan Manila\" = \"Metro Manila\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprovince_names <- sort(provinces_sf$ADM2_EN)\nprovince_names\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Abra\"                                \"Agusan del Norte\"                   \n [3] \"Agusan del Sur\"                      \"Aklan\"                              \n [5] \"Albay\"                               \"Antique\"                            \n [7] \"Apayao\"                              \"Aurora\"                             \n [9] \"Basilan\"                             \"Bataan\"                             \n[11] \"Batanes\"                             \"Batangas\"                           \n[13] \"Benguet\"                             \"Biliran\"                            \n[15] \"Bohol\"                               \"Bukidnon\"                           \n[17] \"Bulacan\"                             \"Cagayan\"                            \n[19] \"Camarines Norte\"                     \"Camarines Sur\"                      \n[21] \"Camiguin\"                            \"Capiz\"                              \n[23] \"Catanduanes\"                         \"Cavite\"                             \n[25] \"Cebu\"                                \"City of Isabela (not a province)\"   \n[27] \"Cotabato (North Cotabato)\"           \"Davao de Oro (Compostela Valley)\"   \n[29] \"Davao del Norte\"                     \"Davao del Sur\"                      \n[31] \"Davao Occidental\"                    \"Davao Oriental\"                     \n[33] \"Dinagat Islands\"                     \"Eastern Samar\"                      \n[35] \"Guimaras\"                            \"Ifugao\"                             \n[37] \"Ilocos Norte\"                        \"Ilocos Sur\"                         \n[39] \"Iloilo\"                              \"Isabela\"                            \n[41] \"Kalinga\"                             \"La Union\"                           \n[43] \"Laguna\"                              \"Lanao del Norte\"                    \n[45] \"Lanao del Sur\"                       \"Leyte\"                              \n[47] \"Maguindanao del Norte\"               \"Maguindanao del Sur\"                \n[49] \"Marinduque\"                          \"Masbate\"                            \n[51] \"Metropolitan Manila First District\"  \"Metropolitan Manila Fourth District\"\n[53] \"Metropolitan Manila Second District\" \"Metropolitan Manila Third District\" \n[55] \"Misamis Occidental\"                  \"Misamis Oriental\"                   \n[57] \"Mountain Province\"                   \"Negros Occidental\"                  \n[59] \"Negros Oriental\"                     \"Northern Samar\"                     \n[61] \"Nueva Ecija\"                         \"Nueva Vizcaya\"                      \n[63] \"Occidental Mindoro\"                  \"Oriental Mindoro\"                   \n[65] \"Palawan\"                             \"Pampanga\"                           \n[67] \"Pangasinan\"                          \"Quezon\"                             \n[69] \"Quirino\"                             \"Rizal\"                              \n[71] \"Romblon\"                             \"Samar (Western Samar)\"              \n[73] \"Sarangani\"                           \"Siquijor\"                           \n[75] \"Sorsogon\"                            \"South Cotabato\"                     \n[77] \"Southern Leyte\"                      \"Special Geographic Area\"            \n[79] \"Sultan Kudarat\"                      \"Sulu\"                               \n[81] \"Surigao del Norte\"                   \"Surigao del Sur\"                    \n[83] \"Tarlac\"                              \"Tawi-Tawi\"                          \n[85] \"Zambales\"                            \"Zamboanga del Norte\"                \n[87] \"Zamboanga del Sur\"                   \"Zamboanga Sibugay\"                  \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# NOTE: The City of Isabela is treated separately from Basilan province as it is a component city but belongs to a different region than its mother province, but we will merge both of them to make this simpler to understand\nprovinces_sf <- provinces_sf %>% mutate(ADM2_EN = recode(ADM2_EN, \"City of Isabela (not a province)\" = \"Basilan\", \"Cotabato (North Cotabato)\" = \"Cotabato\", \"Davao de Oro (Compostela Valley)\" = \"Davao de Oro\", \"Samar (Western Samar)\" = \"Samar\", \"Metropolitan Manila First District\" = \"Metro Manila\", \"Metropolitan Manila Second District\" = \"Metro Manila\", \"Metropolitan Manila Third District\" = \"Metro Manila\", \"Metropolitan Manila Fourth District\" = \"Metro Manila\"))\n```\n:::\n\n\nNow, I just need to make sure that there are no provinces that I missed.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnon_matching_values <- setdiff(drugs_data$admin2, provinces_sf$ADM2_EN)\nnon_matching_values\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ncharacter(0)\n```\n\n\n:::\n:::\n\n\nNice!\n\nNow, we simply need to merge the duplicate provinces together in `provinces_sf`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprovinces_sf <- provinces_sf %>% select(1, 14)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmerged_provinces_sf <- provinces_sf %>% group_by(ADM2_EN) %>% summarise(geometry = st_union(geometry))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\ntm_shape(merged_provinces_sf %>% filter(ADM2_EN == \"Metro Manila\")) +\n  tm_polygons() +\n  tm_text(\"ADM2_EN\", col = \"blue\", size = 0.5, remove.overlap = TRUE)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n\n# Are the number of cases of drug related incidents in Philippines affected by location, or do they stay the same no matter where you are in the country?\n\nAnalyzing the spatial distribution of drug-related cases across the Philippines is crucial for understanding whether geographic location plays a significant role in their occurrence. This section employs global measures of spatial autocorrelation to systematically examine whether these cases exhibit spatial dependence or if they are randomly distributed across the country. Through the application of Moran's I and Geary's C statistics, we can quantitatively assess whether provinces with high numbers of cases tend to cluster together (positive spatial autocorrelation), if they are dispersed (negative spatial autocorrelation), or if the distribution shows no significant spatial pattern (spatial randomness). These global indicators provide a comprehensive first step in understanding the broad spatial patterns of drug-related cases, helping to determine whether the phenomenon is inherently geographic in nature or independent of location within the Philippine archipelago.\n\n## Data wrangling\n\nWe are going to analyse events by year, and analyse all types of events as a whole. That is, we are going to aggregate all types of events together and treat them all as drug related incidents. We are going to ignore the `fatalities` column in this case, as we personally find counting the number of events is more useful than counting the number of people affected in an event, especially since some events have essentially 0 fatalities, and hence that event would not be counted even if it is significant.\n\nFirst, we select only the year and province name columns so we don't get distracted by any of the event type columns. Then, we create a new column called `num_events` to summarise the number of events for each province for each year. `.groups = \"drop\"` is used to automatically ungroup. We then rename the province name column from `admin2` to `ADM2_EN` to ensure that `left_join` joins on the province name column.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrug_data_agg <- drugs_data %>% select(3, 20) %>% group_by(year, admin2) %>% summarise(num_events = n(), .groups = \"drop\") %>% rename(ADM2_EN = admin2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprovince_drug_stats <- left_join(merged_provinces_sf, drug_data_agg)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(ADM2_EN)`\n```\n\n\n:::\n:::\n\n\nThis duplicates the same polygons for each year, so it might not be the most memory efficient operation, but it is definitely the easiest to reason about later.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprovince_drug_stats %>% kable()\n```\n\n::: {.cell-output-display}\n\n\n|ADM2_EN                 |geometry                       | year| num_events|\n|:-----------------------|:------------------------------|----:|----------:|\n|Abra                    |POLYGON ((121.1088 17.73945... | 2016|          6|\n|Abra                    |POLYGON ((121.1088 17.73945... | 2017|          2|\n|Abra                    |POLYGON ((121.1088 17.73945... | 2019|          1|\n|Abra                    |POLYGON ((121.1088 17.73945... | 2020|          1|\n|Abra                    |POLYGON ((121.1088 17.73945... | 2024|          2|\n|Agusan del Norte        |MULTIPOLYGON (((125.5546 9.... | 2016|         17|\n|Agusan del Norte        |MULTIPOLYGON (((125.5546 9.... | 2017|          1|\n|Agusan del Norte        |MULTIPOLYGON (((125.5546 9.... | 2021|          1|\n|Agusan del Norte        |MULTIPOLYGON (((125.5546 9.... | 2022|          2|\n|Agusan del Norte        |MULTIPOLYGON (((125.5546 9.... | 2024|          1|\n|Agusan del Sur          |POLYGON ((126.2278 8.000244... | 2016|         12|\n|Agusan del Sur          |POLYGON ((126.2278 8.000244... | 2017|          4|\n|Agusan del Sur          |POLYGON ((126.2278 8.000244... | 2019|          1|\n|Agusan del Sur          |POLYGON ((126.2278 8.000244... | 2020|          2|\n|Aklan                   |MULTIPOLYGON (((121.9216 11... | 2016|          2|\n|Aklan                   |MULTIPOLYGON (((121.9216 11... | 2017|          2|\n|Albay                   |MULTIPOLYGON (((123.6012 13... | 2016|         27|\n|Albay                   |MULTIPOLYGON (((123.6012 13... | 2017|         17|\n|Albay                   |MULTIPOLYGON (((123.6012 13... | 2018|          8|\n|Albay                   |MULTIPOLYGON (((123.6012 13... | 2019|          3|\n|Albay                   |MULTIPOLYGON (((123.6012 13... | 2020|          7|\n|Albay                   |MULTIPOLYGON (((123.6012 13... | 2021|          9|\n|Antique                 |MULTIPOLYGON (((121.4341 12... | 2016|          1|\n|Antique                 |MULTIPOLYGON (((121.4341 12... | 2017|          8|\n|Antique                 |MULTIPOLYGON (((121.4341 12... | 2018|          4|\n|Apayao                  |POLYGON ((121.4351 17.697, ... | 2016|          3|\n|Apayao                  |POLYGON ((121.4351 17.697, ... | 2017|          1|\n|Aurora                  |MULTIPOLYGON (((122.2337 16... |   NA|         NA|\n|Basilan                 |MULTIPOLYGON (((121.9913 6.... | 2016|          4|\n|Basilan                 |MULTIPOLYGON (((121.9913 6.... | 2017|          2|\n|Basilan                 |MULTIPOLYGON (((121.9913 6.... | 2018|          1|\n|Basilan                 |MULTIPOLYGON (((121.9913 6.... | 2021|          2|\n|Basilan                 |MULTIPOLYGON (((121.9913 6.... | 2022|          2|\n|Basilan                 |MULTIPOLYGON (((121.9913 6.... | 2023|          1|\n|Basilan                 |MULTIPOLYGON (((121.9913 6.... | 2024|          1|\n|Bataan                  |POLYGON ((120.5541 14.82082... | 2016|         22|\n|Bataan                  |POLYGON ((120.5541 14.82082... | 2017|          5|\n|Bataan                  |POLYGON ((120.5541 14.82082... | 2018|          2|\n|Bataan                  |POLYGON ((120.5541 14.82082... | 2019|          2|\n|Bataan                  |POLYGON ((120.5541 14.82082... | 2021|          2|\n|Bataan                  |POLYGON ((120.5541 14.82082... | 2022|          1|\n|Bataan                  |POLYGON ((120.5541 14.82082... | 2023|          1|\n|Batanes                 |MULTIPOLYGON (((121.9489 21... |   NA|         NA|\n|Batangas                |MULTIPOLYGON (((121.0889 13... | 2016|         50|\n|Batangas                |MULTIPOLYGON (((121.0889 13... | 2017|         38|\n|Batangas                |MULTIPOLYGON (((121.0889 13... | 2018|         32|\n|Batangas                |MULTIPOLYGON (((121.0889 13... | 2019|         17|\n|Batangas                |MULTIPOLYGON (((121.0889 13... | 2020|         13|\n|Batangas                |MULTIPOLYGON (((121.0889 13... | 2021|          7|\n|Batangas                |MULTIPOLYGON (((121.0889 13... | 2022|          1|\n|Batangas                |MULTIPOLYGON (((121.0889 13... | 2023|          3|\n|Batangas                |MULTIPOLYGON (((121.0889 13... | 2024|          2|\n|Benguet                 |POLYGON ((120.7706 16.92119... | 2016|         31|\n|Benguet                 |POLYGON ((120.7706 16.92119... | 2017|          5|\n|Benguet                 |POLYGON ((120.7706 16.92119... | 2018|          5|\n|Benguet                 |POLYGON ((120.7706 16.92119... | 2019|          3|\n|Benguet                 |POLYGON ((120.7706 16.92119... | 2020|          2|\n|Benguet                 |POLYGON ((120.7706 16.92119... | 2022|          1|\n|Biliran                 |MULTIPOLYGON (((124.3248 11... |   NA|         NA|\n|Bohol                   |MULTIPOLYGON (((123.9225 9.... | 2016|         21|\n|Bohol                   |MULTIPOLYGON (((123.9225 9.... | 2017|          4|\n|Bohol                   |MULTIPOLYGON (((123.9225 9.... | 2018|          4|\n|Bohol                   |MULTIPOLYGON (((123.9225 9.... | 2019|         15|\n|Bohol                   |MULTIPOLYGON (((123.9225 9.... | 2020|          9|\n|Bohol                   |MULTIPOLYGON (((123.9225 9.... | 2021|          4|\n|Bohol                   |MULTIPOLYGON (((123.9225 9.... | 2022|          1|\n|Bohol                   |MULTIPOLYGON (((123.9225 9.... | 2023|          2|\n|Bukidnon                |POLYGON ((125.092 8.583275,... | 2019|          3|\n|Bukidnon                |POLYGON ((125.092 8.583275,... | 2020|          3|\n|Bukidnon                |POLYGON ((125.092 8.583275,... | 2021|          2|\n|Bukidnon                |POLYGON ((125.092 8.583275,... | 2022|          1|\n|Bulacan                 |POLYGON ((121.145 15.2722, ... | 2016|        261|\n|Bulacan                 |POLYGON ((121.145 15.2722, ... | 2017|        270|\n|Bulacan                 |POLYGON ((121.145 15.2722, ... | 2018|        155|\n|Bulacan                 |POLYGON ((121.145 15.2722, ... | 2019|         91|\n|Bulacan                 |POLYGON ((121.145 15.2722, ... | 2020|         59|\n|Bulacan                 |POLYGON ((121.145 15.2722, ... | 2021|         35|\n|Bulacan                 |POLYGON ((121.145 15.2722, ... | 2022|         11|\n|Bulacan                 |POLYGON ((121.145 15.2722, ... | 2024|          3|\n|Cagayan                 |MULTIPOLYGON (((121.9597 19... | 2016|         22|\n|Cagayan                 |MULTIPOLYGON (((121.9597 19... | 2017|         50|\n|Cagayan                 |MULTIPOLYGON (((121.9597 19... | 2018|          4|\n|Cagayan                 |MULTIPOLYGON (((121.9597 19... | 2019|          3|\n|Cagayan                 |MULTIPOLYGON (((121.9597 19... | 2020|          1|\n|Cagayan                 |MULTIPOLYGON (((121.9597 19... | 2021|          1|\n|Camarines Norte         |MULTIPOLYGON (((122.929 14.... | 2016|         28|\n|Camarines Norte         |MULTIPOLYGON (((122.929 14.... | 2017|         10|\n|Camarines Norte         |MULTIPOLYGON (((122.929 14.... | 2019|          4|\n|Camarines Norte         |MULTIPOLYGON (((122.929 14.... | 2020|          7|\n|Camarines Norte         |MULTIPOLYGON (((122.929 14.... | 2021|          8|\n|Camarines Norte         |MULTIPOLYGON (((122.929 14.... | 2022|          1|\n|Camarines Norte         |MULTIPOLYGON (((122.929 14.... | 2023|          1|\n|Camarines Sur           |MULTIPOLYGON (((123.5704 13... | 2016|         25|\n|Camarines Sur           |MULTIPOLYGON (((123.5704 13... | 2017|          9|\n|Camarines Sur           |MULTIPOLYGON (((123.5704 13... | 2018|          8|\n|Camarines Sur           |MULTIPOLYGON (((123.5704 13... | 2019|          1|\n|Camarines Sur           |MULTIPOLYGON (((123.5704 13... | 2020|         21|\n|Camarines Sur           |MULTIPOLYGON (((123.5704 13... | 2021|         19|\n|Camarines Sur           |MULTIPOLYGON (((123.5704 13... | 2022|          4|\n|Camarines Sur           |MULTIPOLYGON (((123.5704 13... | 2023|          3|\n|Camiguin                |MULTIPOLYGON (((124.6987 9.... |   NA|         NA|\n|Capiz                   |MULTIPOLYGON (((122.841 11.... | 2016|          1|\n|Capiz                   |MULTIPOLYGON (((122.841 11.... | 2017|          1|\n|Capiz                   |MULTIPOLYGON (((122.841 11.... | 2018|          1|\n|Capiz                   |MULTIPOLYGON (((122.841 11.... | 2020|          1|\n|Capiz                   |MULTIPOLYGON (((122.841 11.... | 2021|          1|\n|Catanduanes             |MULTIPOLYGON (((124.2062 14... | 2016|          2|\n|Catanduanes             |MULTIPOLYGON (((124.2062 14... | 2020|          1|\n|Cavite                  |MULTIPOLYGON (((120.9699 14... | 2016|         60|\n|Cavite                  |MULTIPOLYGON (((120.9699 14... | 2017|         45|\n|Cavite                  |MULTIPOLYGON (((120.9699 14... | 2018|         70|\n|Cavite                  |MULTIPOLYGON (((120.9699 14... | 2019|         21|\n|Cavite                  |MULTIPOLYGON (((120.9699 14... | 2020|         34|\n|Cavite                  |MULTIPOLYGON (((120.9699 14... | 2021|         49|\n|Cavite                  |MULTIPOLYGON (((120.9699 14... | 2022|         10|\n|Cavite                  |MULTIPOLYGON (((120.9699 14... | 2023|          7|\n|Cavite                  |MULTIPOLYGON (((120.9699 14... | 2024|          2|\n|Cebu                    |MULTIPOLYGON (((124.0931 11... | 2016|        199|\n|Cebu                    |MULTIPOLYGON (((124.0931 11... | 2017|         87|\n|Cebu                    |MULTIPOLYGON (((124.0931 11... | 2018|         69|\n|Cebu                    |MULTIPOLYGON (((124.0931 11... | 2019|         59|\n|Cebu                    |MULTIPOLYGON (((124.0931 11... | 2020|         54|\n|Cebu                    |MULTIPOLYGON (((124.0931 11... | 2021|         33|\n|Cebu                    |MULTIPOLYGON (((124.0931 11... | 2022|         64|\n|Cebu                    |MULTIPOLYGON (((124.0931 11... | 2023|         45|\n|Cebu                    |MULTIPOLYGON (((124.0931 11... | 2024|         19|\n|Cotabato                |MULTIPOLYGON (((124.7988 7.... | 2016|         16|\n|Cotabato                |MULTIPOLYGON (((124.7988 7.... | 2017|         11|\n|Cotabato                |MULTIPOLYGON (((124.7988 7.... | 2018|         18|\n|Cotabato                |MULTIPOLYGON (((124.7988 7.... | 2019|          6|\n|Cotabato                |MULTIPOLYGON (((124.7988 7.... | 2020|         11|\n|Cotabato                |MULTIPOLYGON (((124.7988 7.... | 2021|          5|\n|Cotabato                |MULTIPOLYGON (((124.7988 7.... | 2022|          6|\n|Cotabato                |MULTIPOLYGON (((124.7988 7.... | 2023|          4|\n|Cotabato                |MULTIPOLYGON (((124.7988 7.... | 2024|          1|\n|Davao Occidental        |MULTIPOLYGON (((125.3171 5.... | 2021|          1|\n|Davao Oriental          |MULTIPOLYGON (((126.3683 7.... | 2016|          2|\n|Davao Oriental          |MULTIPOLYGON (((126.3683 7.... | 2017|          4|\n|Davao Oriental          |MULTIPOLYGON (((126.3683 7.... | 2018|          2|\n|Davao de Oro            |MULTIPOLYGON (((126.1577 7.... | 2016|          4|\n|Davao de Oro            |MULTIPOLYGON (((126.1577 7.... | 2017|          3|\n|Davao de Oro            |MULTIPOLYGON (((126.1577 7.... | 2021|          1|\n|Davao del Norte         |MULTIPOLYGON (((125.3794 8.... | 2016|          4|\n|Davao del Norte         |MULTIPOLYGON (((125.3794 8.... | 2017|          6|\n|Davao del Norte         |MULTIPOLYGON (((125.3794 8.... | 2018|          3|\n|Davao del Norte         |MULTIPOLYGON (((125.3794 8.... | 2019|          1|\n|Davao del Norte         |MULTIPOLYGON (((125.3794 8.... | 2021|          1|\n|Davao del Sur           |POLYGON ((125.68 7.261004, ... | 2016|         14|\n|Davao del Sur           |POLYGON ((125.68 7.261004, ... | 2017|          9|\n|Davao del Sur           |POLYGON ((125.68 7.261004, ... | 2018|         18|\n|Davao del Sur           |POLYGON ((125.68 7.261004, ... | 2019|         11|\n|Davao del Sur           |POLYGON ((125.68 7.261004, ... | 2020|          5|\n|Davao del Sur           |POLYGON ((125.68 7.261004, ... | 2021|         15|\n|Davao del Sur           |POLYGON ((125.68 7.261004, ... | 2022|          6|\n|Davao del Sur           |POLYGON ((125.68 7.261004, ... | 2023|         23|\n|Davao del Sur           |POLYGON ((125.68 7.261004, ... | 2024|          8|\n|Dinagat Islands         |MULTIPOLYGON (((125.499 10.... |   NA|         NA|\n|Eastern Samar           |MULTIPOLYGON (((125.3229 12... |   NA|         NA|\n|Guimaras                |MULTIPOLYGON (((122.4859 10... | 2016|          1|\n|Guimaras                |MULTIPOLYGON (((122.4859 10... | 2018|          1|\n|Ifugao                  |POLYGON ((121.5513 17.07884... | 2016|          1|\n|Ilocos Norte            |POLYGON ((120.9714 18.57995... | 2016|         14|\n|Ilocos Norte            |POLYGON ((120.9714 18.57995... | 2017|         11|\n|Ilocos Norte            |POLYGON ((120.9714 18.57995... | 2018|          5|\n|Ilocos Norte            |POLYGON ((120.9714 18.57995... | 2019|          1|\n|Ilocos Norte            |POLYGON ((120.9714 18.57995... | 2020|          1|\n|Ilocos Norte            |POLYGON ((120.9714 18.57995... | 2021|          1|\n|Ilocos Sur              |MULTIPOLYGON (((120.5406 17... | 2016|         43|\n|Ilocos Sur              |MULTIPOLYGON (((120.5406 17... | 2017|          5|\n|Ilocos Sur              |MULTIPOLYGON (((120.5406 17... | 2018|          8|\n|Ilocos Sur              |MULTIPOLYGON (((120.5406 17... | 2019|          1|\n|Ilocos Sur              |MULTIPOLYGON (((120.5406 17... | 2020|          4|\n|Ilocos Sur              |MULTIPOLYGON (((120.5406 17... | 2021|          1|\n|Ilocos Sur              |MULTIPOLYGON (((120.5406 17... | 2024|          2|\n|Iloilo                  |MULTIPOLYGON (((123.3489 11... | 2016|         19|\n|Iloilo                  |MULTIPOLYGON (((123.3489 11... | 2017|          5|\n|Iloilo                  |MULTIPOLYGON (((123.3489 11... | 2018|          5|\n|Iloilo                  |MULTIPOLYGON (((123.3489 11... | 2019|         10|\n|Iloilo                  |MULTIPOLYGON (((123.3489 11... | 2020|          9|\n|Iloilo                  |MULTIPOLYGON (((123.3489 11... | 2021|          5|\n|Iloilo                  |MULTIPOLYGON (((123.3489 11... | 2022|          3|\n|Iloilo                  |MULTIPOLYGON (((123.3489 11... | 2023|         10|\n|Iloilo                  |MULTIPOLYGON (((123.3489 11... | 2024|          2|\n|Isabela                 |MULTIPOLYGON (((122.1706 17... | 2016|         31|\n|Isabela                 |MULTIPOLYGON (((122.1706 17... | 2017|         76|\n|Isabela                 |MULTIPOLYGON (((122.1706 17... | 2018|         10|\n|Isabela                 |MULTIPOLYGON (((122.1706 17... | 2019|          3|\n|Isabela                 |MULTIPOLYGON (((122.1706 17... | 2020|          4|\n|Kalinga                 |POLYGON ((121.6396 17.50436... | 2016|          2|\n|Kalinga                 |POLYGON ((121.6396 17.50436... | 2021|          1|\n|Kalinga                 |POLYGON ((121.6396 17.50436... | 2022|          2|\n|La Union                |POLYGON ((120.5645 16.67007... | 2016|         30|\n|La Union                |POLYGON ((120.5645 16.67007... | 2017|          4|\n|La Union                |POLYGON ((120.5645 16.67007... | 2018|          7|\n|La Union                |POLYGON ((120.5645 16.67007... | 2019|          2|\n|La Union                |POLYGON ((120.5645 16.67007... | 2020|          2|\n|Laguna                  |MULTIPOLYGON (((121.2067 14... | 2016|         74|\n|Laguna                  |MULTIPOLYGON (((121.2067 14... | 2017|         43|\n|Laguna                  |MULTIPOLYGON (((121.2067 14... | 2018|         82|\n|Laguna                  |MULTIPOLYGON (((121.2067 14... | 2019|         69|\n|Laguna                  |MULTIPOLYGON (((121.2067 14... | 2020|         27|\n|Laguna                  |MULTIPOLYGON (((121.2067 14... | 2021|          6|\n|Laguna                  |MULTIPOLYGON (((121.2067 14... | 2022|          8|\n|Laguna                  |MULTIPOLYGON (((121.2067 14... | 2023|          4|\n|Laguna                  |MULTIPOLYGON (((121.2067 14... | 2024|          2|\n|Lanao del Norte         |POLYGON ((124.2482 8.33171,... | 2016|          7|\n|Lanao del Norte         |POLYGON ((124.2482 8.33171,... | 2017|          4|\n|Lanao del Norte         |POLYGON ((124.2482 8.33171,... | 2018|          1|\n|Lanao del Norte         |POLYGON ((124.2482 8.33171,... | 2019|          3|\n|Lanao del Norte         |POLYGON ((124.2482 8.33171,... | 2020|          5|\n|Lanao del Norte         |POLYGON ((124.2482 8.33171,... | 2023|          1|\n|Lanao del Sur           |POLYGON ((124.484 8.158501,... | 2016|          2|\n|Lanao del Sur           |POLYGON ((124.484 8.158501,... | 2017|          3|\n|Lanao del Sur           |POLYGON ((124.484 8.158501,... | 2018|          3|\n|Lanao del Sur           |POLYGON ((124.484 8.158501,... | 2019|          4|\n|Lanao del Sur           |POLYGON ((124.484 8.158501,... | 2020|          1|\n|Lanao del Sur           |POLYGON ((124.484 8.158501,... | 2021|          3|\n|Lanao del Sur           |POLYGON ((124.484 8.158501,... | 2022|          5|\n|Lanao del Sur           |POLYGON ((124.484 8.158501,... | 2023|          7|\n|Leyte                   |MULTIPOLYGON (((125.1739 10... | 2016|         18|\n|Leyte                   |MULTIPOLYGON (((125.1739 10... | 2017|          8|\n|Leyte                   |MULTIPOLYGON (((125.1739 10... | 2018|          6|\n|Leyte                   |MULTIPOLYGON (((125.1739 10... | 2019|          5|\n|Leyte                   |MULTIPOLYGON (((125.1739 10... | 2020|         10|\n|Leyte                   |MULTIPOLYGON (((125.1739 10... | 2021|          1|\n|Leyte                   |MULTIPOLYGON (((125.1739 10... | 2022|          4|\n|Leyte                   |MULTIPOLYGON (((125.1739 10... | 2023|          6|\n|Leyte                   |MULTIPOLYGON (((125.1739 10... | 2024|          3|\n|Maguindanao del Norte   |MULTIPOLYGON (((124.4633 7.... | 2016|          1|\n|Maguindanao del Norte   |MULTIPOLYGON (((124.4633 7.... | 2017|          1|\n|Maguindanao del Norte   |MULTIPOLYGON (((124.4633 7.... | 2018|          9|\n|Maguindanao del Norte   |MULTIPOLYGON (((124.4633 7.... | 2019|          7|\n|Maguindanao del Norte   |MULTIPOLYGON (((124.4633 7.... | 2020|          6|\n|Maguindanao del Norte   |MULTIPOLYGON (((124.4633 7.... | 2021|          4|\n|Maguindanao del Norte   |MULTIPOLYGON (((124.4633 7.... | 2022|          2|\n|Maguindanao del Norte   |MULTIPOLYGON (((124.4633 7.... | 2023|          1|\n|Maguindanao del Norte   |MULTIPOLYGON (((124.4633 7.... | 2024|          1|\n|Maguindanao del Sur     |POLYGON ((124.7111 7.182233... | 2016|          4|\n|Maguindanao del Sur     |POLYGON ((124.7111 7.182233... | 2017|          4|\n|Maguindanao del Sur     |POLYGON ((124.7111 7.182233... | 2018|          5|\n|Maguindanao del Sur     |POLYGON ((124.7111 7.182233... | 2019|          3|\n|Maguindanao del Sur     |POLYGON ((124.7111 7.182233... | 2020|          2|\n|Maguindanao del Sur     |POLYGON ((124.7111 7.182233... | 2021|          3|\n|Maguindanao del Sur     |POLYGON ((124.7111 7.182233... | 2022|          1|\n|Maguindanao del Sur     |POLYGON ((124.7111 7.182233... | 2024|          2|\n|Marinduque              |MULTIPOLYGON (((122.0257 13... |   NA|         NA|\n|Masbate                 |MULTIPOLYGON (((122.9371 13... | 2016|          7|\n|Masbate                 |MULTIPOLYGON (((122.9371 13... | 2017|          5|\n|Masbate                 |MULTIPOLYGON (((122.9371 13... | 2018|          1|\n|Masbate                 |MULTIPOLYGON (((122.9371 13... | 2019|          2|\n|Masbate                 |MULTIPOLYGON (((122.9371 13... | 2021|          1|\n|Masbate                 |MULTIPOLYGON (((122.9371 13... | 2023|          1|\n|Metro Manila            |POLYGON ((121.1036 14.53224... | 2016|        783|\n|Metro Manila            |POLYGON ((121.1036 14.53224... | 2017|        475|\n|Metro Manila            |POLYGON ((121.1036 14.53224... | 2018|        175|\n|Metro Manila            |POLYGON ((121.1036 14.53224... | 2019|        106|\n|Metro Manila            |POLYGON ((121.1036 14.53224... | 2020|         76|\n|Metro Manila            |POLYGON ((121.1036 14.53224... | 2021|         42|\n|Metro Manila            |POLYGON ((121.1036 14.53224... | 2022|         31|\n|Metro Manila            |POLYGON ((121.1036 14.53224... | 2023|         22|\n|Metro Manila            |POLYGON ((121.1036 14.53224... | 2024|          9|\n|Misamis Occidental      |MULTIPOLYGON (((123.634 8.0... | 2016|          4|\n|Misamis Occidental      |MULTIPOLYGON (((123.634 8.0... | 2017|          2|\n|Misamis Occidental      |MULTIPOLYGON (((123.634 8.0... | 2018|          3|\n|Misamis Occidental      |MULTIPOLYGON (((123.634 8.0... | 2019|          1|\n|Misamis Oriental        |POLYGON ((125.2386 8.747398... | 2016|          5|\n|Misamis Oriental        |POLYGON ((125.2386 8.747398... | 2017|          6|\n|Misamis Oriental        |POLYGON ((125.2386 8.747398... | 2018|         21|\n|Misamis Oriental        |POLYGON ((125.2386 8.747398... | 2019|         20|\n|Misamis Oriental        |POLYGON ((125.2386 8.747398... | 2020|          8|\n|Misamis Oriental        |POLYGON ((125.2386 8.747398... | 2021|          2|\n|Misamis Oriental        |POLYGON ((125.2386 8.747398... | 2022|          1|\n|Misamis Oriental        |POLYGON ((125.2386 8.747398... | 2023|          1|\n|Mountain Province       |POLYGON ((121.5327 17.2691,... |   NA|         NA|\n|Negros Occidental       |MULTIPOLYGON (((123.2035 11... | 2016|         14|\n|Negros Occidental       |MULTIPOLYGON (((123.2035 11... | 2017|         14|\n|Negros Occidental       |MULTIPOLYGON (((123.2035 11... | 2018|         19|\n|Negros Occidental       |MULTIPOLYGON (((123.2035 11... | 2019|         26|\n|Negros Occidental       |MULTIPOLYGON (((123.2035 11... | 2020|         29|\n|Negros Occidental       |MULTIPOLYGON (((123.2035 11... | 2021|         23|\n|Negros Occidental       |MULTIPOLYGON (((123.2035 11... | 2022|         23|\n|Negros Occidental       |MULTIPOLYGON (((123.2035 11... | 2023|         16|\n|Negros Occidental       |MULTIPOLYGON (((123.2035 11... | 2024|          8|\n|Negros Oriental         |MULTIPOLYGON (((123.3355 10... | 2016|          8|\n|Negros Oriental         |MULTIPOLYGON (((123.3355 10... | 2017|          5|\n|Negros Oriental         |MULTIPOLYGON (((123.3355 10... | 2018|          2|\n|Negros Oriental         |MULTIPOLYGON (((123.3355 10... | 2019|          7|\n|Negros Oriental         |MULTIPOLYGON (((123.3355 10... | 2020|         11|\n|Negros Oriental         |MULTIPOLYGON (((123.3355 10... | 2022|          2|\n|Negros Oriental         |MULTIPOLYGON (((123.3355 10... | 2023|          2|\n|Northern Samar          |MULTIPOLYGON (((124.3675 12... | 2016|          1|\n|Northern Samar          |MULTIPOLYGON (((124.3675 12... | 2017|          1|\n|Nueva Ecija             |POLYGON ((121.0633 16.13207... | 2016|         89|\n|Nueva Ecija             |POLYGON ((121.0633 16.13207... | 2017|         35|\n|Nueva Ecija             |POLYGON ((121.0633 16.13207... | 2018|         40|\n|Nueva Ecija             |POLYGON ((121.0633 16.13207... | 2019|         47|\n|Nueva Ecija             |POLYGON ((121.0633 16.13207... | 2020|         35|\n|Nueva Ecija             |POLYGON ((121.0633 16.13207... | 2021|         50|\n|Nueva Ecija             |POLYGON ((121.0633 16.13207... | 2022|          3|\n|Nueva Ecija             |POLYGON ((121.0633 16.13207... | 2023|          4|\n|Nueva Vizcaya           |POLYGON ((121.4324 16.63831... | 2016|          8|\n|Nueva Vizcaya           |POLYGON ((121.4324 16.63831... | 2017|          7|\n|Nueva Vizcaya           |POLYGON ((121.4324 16.63831... | 2018|          1|\n|Occidental Mindoro      |MULTIPOLYGON (((120.0454 13... | 2017|          2|\n|Occidental Mindoro      |MULTIPOLYGON (((120.0454 13... | 2018|          1|\n|Occidental Mindoro      |MULTIPOLYGON (((120.0454 13... | 2019|          1|\n|Occidental Mindoro      |MULTIPOLYGON (((120.0454 13... | 2021|          1|\n|Oriental Mindoro        |MULTIPOLYGON (((121.2841 12... | 2016|          4|\n|Oriental Mindoro        |MULTIPOLYGON (((121.2841 12... | 2017|          2|\n|Oriental Mindoro        |MULTIPOLYGON (((121.2841 12... | 2018|          4|\n|Oriental Mindoro        |MULTIPOLYGON (((121.2841 12... | 2019|          1|\n|Oriental Mindoro        |MULTIPOLYGON (((121.2841 12... | 2020|          2|\n|Oriental Mindoro        |MULTIPOLYGON (((121.2841 12... | 2023|          1|\n|Palawan                 |MULTIPOLYGON (((119.8987 12... | 2017|          2|\n|Palawan                 |MULTIPOLYGON (((119.8987 12... | 2018|          3|\n|Pampanga                |POLYGON ((120.7304 15.27495... | 2016|         33|\n|Pampanga                |POLYGON ((120.7304 15.27495... | 2017|         24|\n|Pampanga                |POLYGON ((120.7304 15.27495... | 2018|         16|\n|Pampanga                |POLYGON ((120.7304 15.27495... | 2019|         21|\n|Pampanga                |POLYGON ((120.7304 15.27495... | 2020|          8|\n|Pampanga                |POLYGON ((120.7304 15.27495... | 2021|          9|\n|Pampanga                |POLYGON ((120.7304 15.27495... | 2022|         14|\n|Pampanga                |POLYGON ((120.7304 15.27495... | 2023|          2|\n|Pangasinan              |MULTIPOLYGON (((119.9228 16... | 2016|        101|\n|Pangasinan              |MULTIPOLYGON (((119.9228 16... | 2017|         23|\n|Pangasinan              |MULTIPOLYGON (((119.9228 16... | 2018|          6|\n|Pangasinan              |MULTIPOLYGON (((119.9228 16... | 2019|          8|\n|Pangasinan              |MULTIPOLYGON (((119.9228 16... | 2020|          2|\n|Pangasinan              |MULTIPOLYGON (((119.9228 16... | 2021|          2|\n|Pangasinan              |MULTIPOLYGON (((119.9228 16... | 2024|          1|\n|Quezon                  |MULTIPOLYGON (((122.3057 14... | 2016|         51|\n|Quezon                  |MULTIPOLYGON (((122.3057 14... | 2017|         16|\n|Quezon                  |MULTIPOLYGON (((122.3057 14... | 2018|         29|\n|Quezon                  |MULTIPOLYGON (((122.3057 14... | 2019|         36|\n|Quezon                  |MULTIPOLYGON (((122.3057 14... | 2020|          7|\n|Quezon                  |MULTIPOLYGON (((122.3057 14... | 2021|          6|\n|Quezon                  |MULTIPOLYGON (((122.3057 14... | 2022|          7|\n|Quezon                  |MULTIPOLYGON (((122.3057 14... | 2023|         10|\n|Quezon                  |MULTIPOLYGON (((122.3057 14... | 2024|          3|\n|Quirino                 |POLYGON ((122.0177 16.51702... | 2016|          2|\n|Quirino                 |POLYGON ((122.0177 16.51702... | 2018|          1|\n|Rizal                   |MULTIPOLYGON (((121.4501 14... | 2016|         62|\n|Rizal                   |MULTIPOLYGON (((121.4501 14... | 2017|         30|\n|Rizal                   |MULTIPOLYGON (((121.4501 14... | 2018|         29|\n|Rizal                   |MULTIPOLYGON (((121.4501 14... | 2019|         10|\n|Rizal                   |MULTIPOLYGON (((121.4501 14... | 2020|          8|\n|Rizal                   |MULTIPOLYGON (((121.4501 14... | 2021|          7|\n|Rizal                   |MULTIPOLYGON (((121.4501 14... | 2022|          7|\n|Rizal                   |MULTIPOLYGON (((121.4501 14... | 2023|          5|\n|Rizal                   |MULTIPOLYGON (((121.4501 14... | 2024|          5|\n|Romblon                 |MULTIPOLYGON (((122.033 12.... |   NA|         NA|\n|Samar                   |MULTIPOLYGON (((125.1508 12... | 2016|          5|\n|Samar                   |MULTIPOLYGON (((125.1508 12... | 2017|          4|\n|Samar                   |MULTIPOLYGON (((125.1508 12... | 2020|          2|\n|Samar                   |MULTIPOLYGON (((125.1508 12... | 2021|          2|\n|Samar                   |MULTIPOLYGON (((125.1508 12... | 2023|          1|\n|Samar                   |MULTIPOLYGON (((125.1508 12... | 2024|          1|\n|Sarangani               |MULTIPOLYGON (((125.398 6.4... | 2018|          6|\n|Sarangani               |MULTIPOLYGON (((125.398 6.4... | 2019|          5|\n|Sarangani               |MULTIPOLYGON (((125.398 6.4... | 2020|          1|\n|Siquijor                |POLYGON ((123.6122 9.300828... | 2018|          1|\n|Sorsogon                |MULTIPOLYGON (((123.4823 12... | 2016|          5|\n|Sorsogon                |MULTIPOLYGON (((123.4823 12... | 2017|          3|\n|Sorsogon                |MULTIPOLYGON (((123.4823 12... | 2018|          2|\n|Sorsogon                |MULTIPOLYGON (((123.4823 12... | 2019|          1|\n|Sorsogon                |MULTIPOLYGON (((123.4823 12... | 2020|          5|\n|Sorsogon                |MULTIPOLYGON (((123.4823 12... | 2021|          1|\n|South Cotabato          |POLYGON ((125.0954 6.532886... | 2016|          8|\n|South Cotabato          |POLYGON ((125.0954 6.532886... | 2017|          8|\n|South Cotabato          |POLYGON ((125.0954 6.532886... | 2018|         22|\n|South Cotabato          |POLYGON ((125.0954 6.532886... | 2019|          9|\n|South Cotabato          |POLYGON ((125.0954 6.532886... | 2020|         29|\n|South Cotabato          |POLYGON ((125.0954 6.532886... | 2021|          9|\n|South Cotabato          |POLYGON ((125.0954 6.532886... | 2024|          1|\n|Southern Leyte          |MULTIPOLYGON (((125.1739 10... | 2016|          1|\n|Southern Leyte          |MULTIPOLYGON (((125.1739 10... | 2017|          2|\n|Southern Leyte          |MULTIPOLYGON (((125.1739 10... | 2019|          2|\n|Southern Leyte          |MULTIPOLYGON (((125.1739 10... | 2020|          8|\n|Southern Leyte          |MULTIPOLYGON (((125.1739 10... | 2021|          2|\n|Special Geographic Area |MULTIPOLYGON (((124.406 7.3... |   NA|         NA|\n|Sultan Kudarat          |POLYGON ((125.0068 6.711873... | 2016|          8|\n|Sultan Kudarat          |POLYGON ((125.0068 6.711873... | 2017|          3|\n|Sultan Kudarat          |POLYGON ((125.0068 6.711873... | 2018|          5|\n|Sultan Kudarat          |POLYGON ((125.0068 6.711873... | 2019|          2|\n|Sultan Kudarat          |POLYGON ((125.0068 6.711873... | 2020|          2|\n|Sultan Kudarat          |POLYGON ((125.0068 6.711873... | 2022|          2|\n|Sultan Kudarat          |POLYGON ((125.0068 6.711873... | 2023|          1|\n|Sulu                    |MULTIPOLYGON (((120.6989 6.... | 2016|          2|\n|Sulu                    |MULTIPOLYGON (((120.6989 6.... | 2017|          7|\n|Sulu                    |MULTIPOLYGON (((120.6989 6.... | 2019|          3|\n|Sulu                    |MULTIPOLYGON (((120.6989 6.... | 2020|          1|\n|Sulu                    |MULTIPOLYGON (((120.6989 6.... | 2021|          1|\n|Sulu                    |MULTIPOLYGON (((120.6989 6.... | 2022|          1|\n|Sulu                    |MULTIPOLYGON (((120.6989 6.... | 2023|          4|\n|Sulu                    |MULTIPOLYGON (((120.6989 6.... | 2024|          2|\n|Surigao del Norte       |MULTIPOLYGON (((126.0613 10... | 2016|          4|\n|Surigao del Norte       |MULTIPOLYGON (((126.0613 10... | 2017|          1|\n|Surigao del Norte       |MULTIPOLYGON (((126.0613 10... | 2018|          2|\n|Surigao del Norte       |MULTIPOLYGON (((126.0613 10... | 2019|          1|\n|Surigao del Norte       |MULTIPOLYGON (((126.0613 10... | 2020|          1|\n|Surigao del Sur         |MULTIPOLYGON (((126.3685 7.... | 2016|          2|\n|Surigao del Sur         |MULTIPOLYGON (((126.3685 7.... | 2019|          1|\n|Tarlac                  |POLYGON ((120.6121 15.83029... | 2016|          8|\n|Tarlac                  |POLYGON ((120.6121 15.83029... | 2017|         14|\n|Tarlac                  |POLYGON ((120.6121 15.83029... | 2018|          5|\n|Tarlac                  |POLYGON ((120.6121 15.83029... | 2019|          3|\n|Tarlac                  |POLYGON ((120.6121 15.83029... | 2020|          4|\n|Tarlac                  |POLYGON ((120.6121 15.83029... | 2021|          2|\n|Tarlac                  |POLYGON ((120.6121 15.83029... | 2022|          1|\n|Tawi-Tawi               |MULTIPOLYGON (((118.4204 7.... | 2018|          1|\n|Tawi-Tawi               |MULTIPOLYGON (((118.4204 7.... | 2019|          2|\n|Tawi-Tawi               |MULTIPOLYGON (((118.4204 7.... | 2020|          4|\n|Tawi-Tawi               |MULTIPOLYGON (((118.4204 7.... | 2021|          6|\n|Tawi-Tawi               |MULTIPOLYGON (((118.4204 7.... | 2022|          2|\n|Tawi-Tawi               |MULTIPOLYGON (((118.4204 7.... | 2023|          1|\n|Tawi-Tawi               |MULTIPOLYGON (((118.4204 7.... | 2024|          3|\n|Zambales                |MULTIPOLYGON (((120.2523 15... | 2016|         25|\n|Zambales                |MULTIPOLYGON (((120.2523 15... | 2017|          8|\n|Zambales                |MULTIPOLYGON (((120.2523 15... | 2019|          3|\n|Zambales                |MULTIPOLYGON (((120.2523 15... | 2020|          2|\n|Zambales                |MULTIPOLYGON (((120.2523 15... | 2021|          6|\n|Zambales                |MULTIPOLYGON (((120.2523 15... | 2023|          1|\n|Zamboanga Sibugay       |MULTIPOLYGON (((122.9196 7.... | 2016|          4|\n|Zamboanga Sibugay       |MULTIPOLYGON (((122.9196 7.... | 2017|          3|\n|Zamboanga Sibugay       |MULTIPOLYGON (((122.9196 7.... | 2018|          3|\n|Zamboanga Sibugay       |MULTIPOLYGON (((122.9196 7.... | 2019|          2|\n|Zamboanga Sibugay       |MULTIPOLYGON (((122.9196 7.... | 2020|          1|\n|Zamboanga Sibugay       |MULTIPOLYGON (((122.9196 7.... | 2021|          2|\n|Zamboanga Sibugay       |MULTIPOLYGON (((122.9196 7.... | 2022|          1|\n|Zamboanga Sibugay       |MULTIPOLYGON (((122.9196 7.... | 2024|          1|\n|Zamboanga del Norte     |MULTIPOLYGON (((123.4132 8.... | 2016|          9|\n|Zamboanga del Norte     |MULTIPOLYGON (((123.4132 8.... | 2017|          3|\n|Zamboanga del Norte     |MULTIPOLYGON (((123.4132 8.... | 2018|          1|\n|Zamboanga del Norte     |MULTIPOLYGON (((123.4132 8.... | 2019|          3|\n|Zamboanga del Norte     |MULTIPOLYGON (((123.4132 8.... | 2020|          2|\n|Zamboanga del Norte     |MULTIPOLYGON (((123.4132 8.... | 2023|          1|\n|Zamboanga del Sur       |MULTIPOLYGON (((123.5583 8.... | 2016|         17|\n|Zamboanga del Sur       |MULTIPOLYGON (((123.5583 8.... | 2017|          4|\n|Zamboanga del Sur       |MULTIPOLYGON (((123.5583 8.... | 2018|          9|\n|Zamboanga del Sur       |MULTIPOLYGON (((123.5583 8.... | 2019|          2|\n|Zamboanga del Sur       |MULTIPOLYGON (((123.5583 8.... | 2020|          4|\n|Zamboanga del Sur       |MULTIPOLYGON (((123.5583 8.... | 2021|          4|\n|Zamboanga del Sur       |MULTIPOLYGON (((123.5583 8.... | 2022|          7|\n|Zamboanga del Sur       |MULTIPOLYGON (((123.5583 8.... | 2023|          4|\n|Zamboanga del Sur       |MULTIPOLYGON (((123.5583 8.... | 2024|          2|\n\n\n:::\n:::\n\n\nAs you can see, there are some rows with `NA` values. That is because not all provinces have drug event information. Hence, some rows are not able to join correctly. We will have to remove them.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprovince_drug_stats <- province_drug_stats %>% na.omit()\n```\n:::\n\n\n::: callout-note\nNote that we will end up not using `province_drug_stats` but `province_drug_stats_all` instead for the rest of this exercise, but I will still leave this in for illustrative purposes and/or if I decide to use the former again for some reason in the future.\n:::\n\nWe are also going to prepare a copy that is not delineated by year, but by the entire duration. This is such that we are able to perform spatial point patterns analysis on the entire duration of 2016-2024.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrug_data_year_agg <- drugs_data %>% select(3, 20) %>% group_by(admin2) %>% summarise(num_events = n(), .groups = \"drop\") %>% rename(ADM2_EN = admin2)\nprovince_drug_stats_all <- left_join(merged_provinces_sf, drug_data_year_agg)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(ADM2_EN)`\n```\n\n\n:::\n\n```{.r .cell-code}\nprovince_drug_stats_all <- province_drug_stats_all %>% na.omit()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprovince_drug_stats_all %>% kable()\n```\n\n::: {.cell-output-display}\n\n\n|ADM2_EN               |geometry                       | num_events|\n|:---------------------|:------------------------------|----------:|\n|Abra                  |POLYGON ((121.1088 17.73945... |         12|\n|Agusan del Norte      |MULTIPOLYGON (((125.5546 9.... |         22|\n|Agusan del Sur        |POLYGON ((126.2278 8.000244... |         19|\n|Aklan                 |MULTIPOLYGON (((121.9216 11... |          4|\n|Albay                 |MULTIPOLYGON (((123.6012 13... |         71|\n|Antique               |MULTIPOLYGON (((121.4341 12... |         13|\n|Apayao                |POLYGON ((121.4351 17.697, ... |          4|\n|Basilan               |MULTIPOLYGON (((121.9913 6.... |         13|\n|Bataan                |POLYGON ((120.5541 14.82082... |         35|\n|Batangas              |MULTIPOLYGON (((121.0889 13... |        163|\n|Benguet               |POLYGON ((120.7706 16.92119... |         47|\n|Bohol                 |MULTIPOLYGON (((123.9225 9.... |         60|\n|Bukidnon              |POLYGON ((125.092 8.583275,... |          9|\n|Bulacan               |POLYGON ((121.145 15.2722, ... |        885|\n|Cagayan               |MULTIPOLYGON (((121.9597 19... |         81|\n|Camarines Norte       |MULTIPOLYGON (((122.929 14.... |         59|\n|Camarines Sur         |MULTIPOLYGON (((123.5704 13... |         90|\n|Capiz                 |MULTIPOLYGON (((122.841 11.... |          5|\n|Catanduanes           |MULTIPOLYGON (((124.2062 14... |          3|\n|Cavite                |MULTIPOLYGON (((120.9699 14... |        298|\n|Cebu                  |MULTIPOLYGON (((124.0931 11... |        629|\n|Cotabato              |MULTIPOLYGON (((124.7988 7.... |         78|\n|Davao Occidental      |MULTIPOLYGON (((125.3171 5.... |          1|\n|Davao Oriental        |MULTIPOLYGON (((126.3683 7.... |          8|\n|Davao de Oro          |MULTIPOLYGON (((126.1577 7.... |          8|\n|Davao del Norte       |MULTIPOLYGON (((125.3794 8.... |         15|\n|Davao del Sur         |POLYGON ((125.68 7.261004, ... |        109|\n|Guimaras              |MULTIPOLYGON (((122.4859 10... |          2|\n|Ifugao                |POLYGON ((121.5513 17.07884... |          1|\n|Ilocos Norte          |POLYGON ((120.9714 18.57995... |         33|\n|Ilocos Sur            |MULTIPOLYGON (((120.5406 17... |         64|\n|Iloilo                |MULTIPOLYGON (((123.3489 11... |         68|\n|Isabela               |MULTIPOLYGON (((122.1706 17... |        124|\n|Kalinga               |POLYGON ((121.6396 17.50436... |          5|\n|La Union              |POLYGON ((120.5645 16.67007... |         45|\n|Laguna                |MULTIPOLYGON (((121.2067 14... |        315|\n|Lanao del Norte       |POLYGON ((124.2482 8.33171,... |         21|\n|Lanao del Sur         |POLYGON ((124.484 8.158501,... |         28|\n|Leyte                 |MULTIPOLYGON (((125.1739 10... |         61|\n|Maguindanao del Norte |MULTIPOLYGON (((124.4633 7.... |         32|\n|Maguindanao del Sur   |POLYGON ((124.7111 7.182233... |         24|\n|Masbate               |MULTIPOLYGON (((122.9371 13... |         17|\n|Metro Manila          |POLYGON ((121.1036 14.53224... |       1719|\n|Misamis Occidental    |MULTIPOLYGON (((123.634 8.0... |         10|\n|Misamis Oriental      |POLYGON ((125.2386 8.747398... |         64|\n|Negros Occidental     |MULTIPOLYGON (((123.2035 11... |        172|\n|Negros Oriental       |MULTIPOLYGON (((123.3355 10... |         37|\n|Northern Samar        |MULTIPOLYGON (((124.3675 12... |          2|\n|Nueva Ecija           |POLYGON ((121.0633 16.13207... |        303|\n|Nueva Vizcaya         |POLYGON ((121.4324 16.63831... |         16|\n|Occidental Mindoro    |MULTIPOLYGON (((120.0454 13... |          5|\n|Oriental Mindoro      |MULTIPOLYGON (((121.2841 12... |         14|\n|Palawan               |MULTIPOLYGON (((119.8987 12... |          5|\n|Pampanga              |POLYGON ((120.7304 15.27495... |        127|\n|Pangasinan            |MULTIPOLYGON (((119.9228 16... |        143|\n|Quezon                |MULTIPOLYGON (((122.3057 14... |        165|\n|Quirino               |POLYGON ((122.0177 16.51702... |          3|\n|Rizal                 |MULTIPOLYGON (((121.4501 14... |        163|\n|Samar                 |MULTIPOLYGON (((125.1508 12... |         15|\n|Sarangani             |MULTIPOLYGON (((125.398 6.4... |         12|\n|Siquijor              |POLYGON ((123.6122 9.300828... |          1|\n|Sorsogon              |MULTIPOLYGON (((123.4823 12... |         17|\n|South Cotabato        |POLYGON ((125.0954 6.532886... |         86|\n|Southern Leyte        |MULTIPOLYGON (((125.1739 10... |         15|\n|Sultan Kudarat        |POLYGON ((125.0068 6.711873... |         23|\n|Sulu                  |MULTIPOLYGON (((120.6989 6.... |         21|\n|Surigao del Norte     |MULTIPOLYGON (((126.0613 10... |          9|\n|Surigao del Sur       |MULTIPOLYGON (((126.3685 7.... |          3|\n|Tarlac                |POLYGON ((120.6121 15.83029... |         37|\n|Tawi-Tawi             |MULTIPOLYGON (((118.4204 7.... |         19|\n|Zambales              |MULTIPOLYGON (((120.2523 15... |         45|\n|Zamboanga Sibugay     |MULTIPOLYGON (((122.9196 7.... |         17|\n|Zamboanga del Norte   |MULTIPOLYGON (((123.4132 8.... |         19|\n|Zamboanga del Sur     |MULTIPOLYGON (((123.5583 8.... |         53|\n\n\n:::\n:::\n\n\n## Analysis\n\n### Data wrangling\n\nBefore we do any analysis, we need to generate the nearest neighbours of each province.\n\nWhen creating spatial weights, we use row standardization (style = 'W'), where each neighbor receives equal influence by being assigned a weight of 1 divided by the total number of neighbors. For example, if a province has four neighbours, each neighbor gets a weight of 1/4. While this approach is intuitive, it has a limitation: provinces at the edges of the Philippines (coastal areas or island provinces) have fewer neighbors than inland provinces. This means their spatial calculations are based on fewer observations, which could potentially distort the true spatial patterns in the data. More sophisticated weighting schemes exist, such as the binary weighting method (style=\"B\"). In an archipelagic country like the Philippines, the binary weighting method (style=\"B\") might be more appropriate than row standardization (style=\"W\") due to the country's unique geographic structure. While row standardization divides the influence equally among neighbors (e.g., each of four neighbors gets 1/4 weight), this approach can distort spatial relationships in areas with few neighbors, particularly in island provinces and coastal areas. When a province has only two neighbors under row standardization, each neighbor receives a weight of 1/2, giving them disproportionately high influence compared to neighbors of provinces with many connections, where each might only receive 1/8 weight. Binary weighting addresses this by simply assigning a weight of 1 to each neighbor, regardless of how many neighbors a province has, thereby maintaining the actual strength of connections without artificially inflating the importance of neighbors just because a province has fewer of them. This approach might better represent true spatial relationships across the Philippines' complex island geography. Hence, we will use the binary weighting method instead for this exercise.\n\nNext, given that Philippines is a large archipelago made up of thousands of islands, many simple features (SF) polygons have no neighbours since they are not physically adjacent to one another, and we need to deal with that.\n\nWe could simply leave those islands out, but given that the entire Philippines is made up of islands of varying sizes, this would be unacceptable.\n\nThus, instead of using contiguity-based neighbours, we should use k-nearest neighbours (KNN) instead. With KNN, every province has exactly k neighbors. It captures across-water relationships and maintains connections between islands. Most importantly, it better represents actual spatial interactions in an archipelagic country.\n\nAnother possibility would be to use distance-based weighting. However with KNN, it ensures that every polygon has at least a set amount of neighbours, negating the possibility of a polygon not having a neighbour. Distance-based might leave some islands isolated if distance threshold is too small, or include too many neighbors if threshold is too large.\n\nOne way to still continue to use distance-based weighting is to use KNN to determine the max distance such that every province has at least one neighbour.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlongitude <- map_dbl(province_drug_stats_all$geometry, ~st_centroid(.x)[[1]])\nlatitude <- map_dbl(province_drug_stats_all$geometry, ~st_centroid(.x)[[2]])\ncoords <- cbind(longitude, latitude)\nk1 <- knn2nb(knearneigh(coords))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in knn2nb(knearneigh(coords)): neighbour object has 21 sub-graphs\n```\n\n\n:::\n\n```{.r .cell-code}\nk1dists <- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.84   41.95   49.65   60.40   66.25  385.26 \n```\n\n\n:::\n:::\n\n\nAs you can see, the max distance is 385.26km. We can use that number in our distance-based nearest neighbour calculations.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_d <- dnearneigh(coords, 0, 386, longlat = TRUE)\nwm_d\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNeighbour list object:\nNumber of regions: 74 \nNumber of nonzero links: 1990 \nPercentage nonzero weights: 36.34039 \nAverage number of links: 26.89189 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_d_lw <- nb2listw(wm_d, style = 'B')\nsummary(wm_d_lw)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 74 \nNumber of nonzero links: 1990 \nPercentage nonzero weights: 36.34039 \nAverage number of links: 26.89189 \nLink number distribution:\n\n 1  2  7 17 19 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 \n 1  1  1  3  1  1  4  4  1  5  2  7 12  5  5  5  6  4  3  1  2 \n1 least connected region:\n53 with 1 link\n2 most connected regions:\n12 61 with 36 links\n\nWeights style: B \nWeights constants summary:\n   n   nn   S0   S1     S2\nB 74 5476 1990 3980 226536\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(province_drug_stats_all$geometry, border=\"lightgrey\")\nplot(wm_d, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-24-1.png){width=960}\n:::\n:::\n\n\nHowever, the distance between islands vary greatly as demonstrated. A single distance threshold that works for Visayas (closely spaced islands) might connect too many neighbors while Palawan to Luzon might leave some areas isolated.\n\nKNN offers more control and provides more consistent spatial relationship measurements across different density areas.\n\nSince we are using KNN, the parameter that matters most to us is `k`.\n\nTo figure out what value of `k` we should use, one method is to calculate the average contiguity (or the average number of neighbours), but since we determined calculating contiguity weights is out of the question, let's do some sensitivity analysis instead. We are essentially guess-and-checking different `k` values, and see when does the Moran's I value stabilise (or stops changing drastically).\n\nHowever to do all that, we need to calculate the centroid of each province to derive a central coordinate (remember, we are not using projected coordinates here).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlongitude <- map_dbl(province_drug_stats_all$geometry, ~st_centroid(.x)[[1]])\nlatitude <- map_dbl(province_drug_stats_all$geometry, ~st_centroid(.x)[[2]])\n```\n:::\n\n\nNow that we have latitude and longitude, we use `cbind` to put longitude and latitude into the same object.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords <- cbind(longitude, latitude)\n```\n:::\n\n\nFinally, we can start calculating the weights of each nearest neighbour relationship.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresults <- data.frame(k = 2:10, morans_i = NA)\n\nfor(k in 2:10) {\n  # Create knn weights\n  nb_k <- knearneigh(coords, k=k) %>%\n    knn2nb()\n  weights_k <- nb2listw(nb_k, style = 'B')\n  \n  # Calculate Moran's I\n  moran <- moran.test(province_drug_stats_all$num_events, weights_k)\n  results$morans_i[results$k == k] <- moran$estimate[1]\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in knn2nb(.): neighbour object has 2 sub-graphs\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(results)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   k  morans_i\n1  2 0.4831516\n2  3 0.4043223\n3  4 0.3350568\n4  5 0.2749455\n5  6 0.2480313\n6  7 0.2027889\n7  8 0.1984781\n8  9 0.1913234\n9 10 0.1713164\n```\n\n\n:::\n:::\n\n\nThe ideal `k` value seems to be 7\n\nNow, let's calculate KNN with k = 7.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknn <- knn2nb(knearneigh(coords, k=7))\nknn\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNeighbour list object:\nNumber of regions: 74 \nNumber of nonzero links: 518 \nPercentage nonzero weights: 9.459459 \nAverage number of links: 7 \nNon-symmetric neighbours list\n```\n\n\n:::\n\n```{.r .cell-code}\nk1dists <- unlist(nbdists(knn, coords, longlat = TRUE))\nsummary(k1dists)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.84   71.08   97.51  112.09  137.95  526.69 \n```\n\n\n:::\n:::\n\n\nNext, `nb2listw` is used to convert the `nb` object into a spatial weights object.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknn_lw <- nb2listw(knn, style = 'B')\nsummary(knn_lw)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 74 \nNumber of nonzero links: 518 \nPercentage nonzero weights: 9.459459 \nAverage number of links: 7 \nNon-symmetric neighbours list\nLink number distribution:\n\n 7 \n74 \n74 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 with 7 links\n74 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 with 7 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1    S2\nB 74 5476 518 924 14978\n```\n\n\n:::\n:::\n\n\nNow, we can visualise the relationships between each province based on nearest neighbours to make sure that everything works correctly.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(province_drug_stats_all$geometry, border=\"lightgrey\")\nplot(knn, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-30-1.png){width=960}\n:::\n:::\n\n\nIf you still want to use a distance based approach to calculate nearest neighbour, feel free to run the following code:\n\n``` r\nknn <- wm_d\nknn_lw <- wm_d_lw\n```\n\n### Moran's I\n\nNow here comes the fun part. We are going to do Moran's I testing, specifically using Monte Carlo hypothesis testing. It measures how much nearby geographic areas are related in terms of a specific variable. It assesses whether similar or dissimilar values are clustered together in space or randomly distributed.\n\n-   A positive Moran's I indicates that similar values tend to cluster\n\n-   A negative value suggests that dissimilar values are near each other\n\n-   A value close to zero implies no spatial autocorrelation, meaning the values are randomly distributed across space\n\nThe values range from -1 to 1.\n\nWe first need to set a consistent seed to make sure that our results are reproducible across runs. Then, using `global_moran_perm` from `sfdep` we can do hypothesis testing.\n\n``` r\nmoran.mc(x,       # The variable you're analyzing (e.g., number of drug cases)\n         listw,   # Spatial weights matrix defining neighborhood relationships\n         nsim,    # Number of simulations for Monte Carlo test (e.g., 999)\n         zero.policy = NULL,  # How to handle regions with no neighbors\n         alternative = \"greater\")  # Type of alternative hypothesis to test\n```\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(27)\nbperm <- moran.mc(province_drug_stats_all$num_events, listw = knn_lw, zero.policy = TRUE, na.action = na.omit, nsim = 999)\nbperm\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  province_drug_stats_all$num_events \nweights: knn_lw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.20279, observed rank = 999, p-value = 0.001\nalternative hypothesis: greater\n```\n\n\n:::\n:::\n\n\nThe Monte Carlo simulation results for Moran's I provide strong evidence of spatial clustering in drug-related incidents across the Philippines. The positive Moran's I value of 0.20279 indicates that provinces with similar levels of drug-related incidents tend to be located near each other, suggesting a clear pattern of spatial autocorrelation rather than random distribution. This finding is strongly supported by the observed rank of 999 out of 1000 simulations, indicating that our observed pattern is more clustered than almost all randomly generated patterns. Furthermore, the very small p-value of 0.001 suggests only a 0.1% chance that this clustering pattern could occur randomly, providing highly significant statistical evidence that the spatial distribution of drug-related incidents is influenced by geographic location. These results strongly justify the need for further spatial analysis, particularly at the local level, to better understand the geographic patterns of drug-related incidents in the Philippines.\n\n#### Visualisation\n\nTo better understand our spatial analysis results, we should visualize the distribution of simulated Moran's I values. By creating a histogram of these simulated values and marking our observed Moran's I, we can visually assess how unusual our observed value is compared to what we would expect under spatial randomness. We'll use R's basic plotting functions `hist()` to create the histogram and `abline()` to add a vertical line showing our observed value.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(bperm$res[1:999])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -0.01535737\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nvar(bperm$res[1:999])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.001663994\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(bperm$res[1:999])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-0.092407 -0.042843 -0.023983 -0.015357  0.003314  0.236765 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, col=\"red\") \n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n\nThis resulting histogram shows the distribution of Moran's I values under the null hypothesis (spatial randomness). The rightward skew indicates that even random spatial patterns tend to produce slightly positive Moran's I values. This skewed distribution is why we use Monte Carlo simulation rather than assuming a normal distribution. Our observed value (not shown in this plot) being far to the right would further support that the spatial clustering we found is not just due to random chance.\n\n#### Conclusion\n\nThese robust findings emphasize that geographic location plays a crucial role in the distribution of drug-related incidents, with neighboring provinces showing similar patterns, suggesting that interventions should consider spatial relationships rather than treating provinces in isolation. The strength and consistency of these results strongly justify further investigation into local spatial patterns to better understand the specific nature of these clusters across the Philippines, which could significantly inform targeted policy and enforcement strategies.\n\n### Geary's C\n\n``` r\ngeary.mc(x,       # The variable you're analyzing (e.g., number of drug cases)\n         listw,   # Spatial weights matrix defining neighborhood relationships\n         nsim,    # Number of simulations for Monte Carlo test (e.g., 999)\n         zero.policy = NULL,  # How to handle regions with no neighbors\n         alternative = \"greater\")  # Type of alternative hypothesis to test\n```\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncperm <- geary.mc(province_drug_stats_all$num_events, listw = knn_lw, nsim = 999)\ncperm\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Geary C\n\ndata:  province_drug_stats_all$num_events \nweights: knn_lw  \nnumber of simulations + 1: 1000 \n\nstatistic = 1.0715, observed rank = 717, p-value = 0.717\nalternative hypothesis: greater\n```\n\n\n:::\n:::\n\n\nWe are running 1001 simulations to raise the confidence of our result.\n\nFrom our data, we have a `statistic` of 1.0715 which is the observed value of Geary C based on the actual data. Geary's C typically ranges between 0 and 2.\n\n-   C ≈ 1 indicates no spatial autocorrelation (random spatial distribution).\n\n-   C \\< 1 suggests positive spatial autocorrelation (neighboring areas are more similar).\n\n-   C \\> 1 indicates negative spatial autocorrelation (neighboring areas are dissimilar).\n\nThe Monte Carlo simulation results for Geary's C reveal a different perspective on the spatial patterns of drug-related incidents in the Philippines. The Geary's C value of 1.0715 is very close to 1, suggesting only weak positive spatial autocorrelation when comparing neighboring provinces directly. This interpretation is supported by the observed rank of 717 out of 1000 simulations, placing our observed pattern roughly in the middle of the distribution rather than at an extreme. The high p-value of 0.717 indicates a 71.7% chance that this pattern could occur under spatial randomness, well above conventional significance levels. Unlike the Moran's I results, these Geary's C findings suggest that when examining immediate neighbor relationships, the spatial pattern of drug-related incidents is not significantly different from what we might expect by chance. This apparent contradiction with Moran's I results likely stems from Geary's C's focus on local comparisons rather than global patterns, suggesting that while broad regional patterns exist, the relationship between immediate neighbors might be more complex or variable.\n\nTherefore, we might need to consider both global and local patterns using techniques like LISA statistics.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(cperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary's C\")\nabline(v=1, col=\"red\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n:::\n\n\nSince this histogram is approximately symmetrical around 1, this suggests almost perfect spatial randomness for Geary's C. A symmetry around 1 suggests that there is an equal likelihood of getting slightly positive or negative spatial autocorrelation by chance. This is consistent with my earlier interpretation of the data having a weak positive spatial autocorrelation.\n\n# Where are the main areas of concentrated drug abuse, and are there any unusual patterns or high-risk spots?\n\nTo identify specific areas of concentrated drug-related incidents in the Philippines, we employ two complementary local spatial analysis techniques: Local Indicators of Spatial Association (LISA) and Getis-Ord Gi\\* statistics. While our previous global spatial autocorrelation analysis confirmed the presence of spatial clustering across the country, these local measures allow us to pinpoint exactly where these clusters occur and distinguish between different types of spatial associations. LISA analysis helps identify not only clusters of high-value areas (hot spots) and low-value areas (cold spots) but also spatial outliers where provinces differ significantly from their neighbors. The Getis-Ord Gi\\* statistic complements this by specifically identifying statistically significant hot spots and cold spots, providing a comprehensive understanding of where drug-related incidents are concentrated and where they are notably absent. Together, these methods enable us to map and analyze the geographic distribution of drug-related incidents at a more granular level, crucial for targeted policy interventions.\n\n## Analysis\n\nLISA identifies clusters and outliers by calculating spatial autocorrelation for individual spatial units such as provinces rather than the entire dataset, as global Moran's I does.\n\nFor example, if you were analyzing the number of cases of drug use across different provinces in Philippines, LISA would allow you to identify which provinces have drug use counts that are spatially autocorrelated with neighboring provinces. It can highlight specific counties where drug use is either unusually high or low compared to their surroundings.\n\n### Local Indicators of Spatial Association (LISA) - Anselin's Local Moran's I\n\n#### Data wrangling\n\nBy mapping out the p-value of Local Moran's I (LISA), we can determine the statistical significance of the observed local spatial autocorrelation. This step is crucial because it helps distinguish between areas where the clustering or dispersion of drug cases is meaningful and areas where any observed pattern could be due to random chance.\n\nTo identify local spatial clusters and outliers, we'll use the `localmoran()` function from the `spdep` package. This function calculates local Moran's I values (Ii) for each province. It takes two main inputs: the province-level drug incident counts (zi values) and our previously created spatial weights matrix that defines each province's neighbors and their relationships. The resulting Ii values will help us identify where significant spatial clusters or outliers exist in our drug incident data across the Philippines.\n\n``` r\nlocalmoran(x,          # The variable you're analyzing (e.g., number of drug cases)\n           listw,      # Spatial weights matrix defining neighborhood relationships\n           zero.policy = NULL,    # How to handle regions with no neighbors\n           na.action = na.fail,   # How to handle NA values\n           alternative = \"two.sided\",  # Type of alternative hypothesis\n           p.adjust.method = \"none\",   # Method for p-value adjustment\n           mlvar = TRUE,              # Whether to compute mean and variance\n           spChk = NULL)             # Spatial weights check\n```\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfips <- order(province_drug_stats_all$ADM2_EN)\nlocalMI <- localmoran(province_drug_stats_all$num_events, knn_lw)\nhead(localMI)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          Ii          E.Ii    Var.Ii       Z.Ii Pr(z != E(Ii))\n1  0.6839405 -0.0117334671 0.7945861  0.7804323      0.4351364\n2  0.6856409 -0.0090315751 0.6118514  0.8880902      0.3744922\n3  0.7198863 -0.0098050710 0.6641790  0.8953578      0.3705959\n4  0.5994218 -0.0141491866 0.9578465  0.6269268      0.5307072\n5  0.1873232 -0.0008958409 0.0607601  0.7635796      0.4451178\n6 -0.3888712 -0.0114473901 0.7752448 -0.4286570      0.6681729\n```\n\n\n:::\n:::\n\n\nThe `localmoran()` function produces five important values for each location (province in our case):\n\n1.  Local Moran's I (Ii): The actual measure of local spatial autocorrelation\n\n2.  Expected Value (E.Ii): What value we would expect if there was no spatial pattern\n\n3.  Variance (Var.Ii): How much we expect the value to vary under spatial randomness\n\n4.  Z-score (Z.Ii): How many standard deviations the actual value is from what we expect\n\n5.  P-value (Pr()): The statistical significance of the spatial pattern, indicating how likely the observed pattern could occur by chance\n\nThese values help us determine which provinces show significant spatial clustering or outlier patterns in drug-related incidents.\n\nThe code chunk below uses `printCoefmat()` to display the local Moran's I statistics in a formatted table, making it easier to examine the results for each province.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprintCoefmat(data.frame(\n  localMI[fips,], \n  row.names=province_drug_stats_all$ADM2_EN[fips]),\n  check.names=FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                               Ii        E.Ii      Var.Ii        Z.Ii\nAbra                   6.8394e-01 -1.1733e-02  7.9459e-01  7.8043e-01\nAgusan del Norte       6.8564e-01 -9.0316e-03  6.1185e-01  8.8809e-01\nAgusan del Sur         7.1989e-01 -9.8051e-03  6.6418e-01  8.9536e-01\nAklan                  5.9942e-01 -1.4149e-02  9.5785e-01  6.2693e-01\nAlbay                  1.8732e-01 -8.9584e-04  6.0760e-02  7.6358e-01\nAntique               -3.8887e-01 -1.1447e-02  7.7524e-01 -4.2866e-01\nApayao                 5.5162e-01 -1.4149e-02  9.5785e-01  5.7809e-01\nBasilan                7.1113e-01 -1.1447e-02  7.7524e-01  8.2066e-01\nBataan                -2.8222e+00 -6.0469e-03  4.0983e-01 -4.3990e+00\nBatangas               2.4228e+00 -8.5203e-03  5.7726e-01  3.2000e+00\nBenguet                6.8258e-02 -3.8215e-03  2.5908e-01  1.4161e-01\nBohol                 -2.0017e-01 -1.9843e-03  1.3457e-01 -5.4027e-01\nBukidnon               4.9903e-01 -1.2613e-02  8.5403e-01  5.5364e-01\nBulacan                2.9540e+01 -1.1058e+00  6.3163e+01  3.8560e+00\nCagayan                9.4944e-02 -2.7703e-04  1.8791e-02  6.9464e-01\nCamarines Norte       -2.0042e-01 -2.1045e-03  1.4271e-01 -5.2497e-01\nCamarines Sur          4.9927e-04 -2.1960e-05  1.4896e-03  1.3505e-02\nCapiz                 -4.0795e-01 -1.3835e-02  9.3661e-01 -4.0723e-01\nCatanduanes            6.3945e-01 -1.4467e-02  9.7932e-01  6.6078e-01\nCavite                 1.0361e+01 -7.3807e-02  4.9538e+00  4.6881e+00\nCebu                  -3.0233e+00 -5.0617e-01  3.1853e+01 -4.4600e-01\nCotabato               1.1854e-01 -4.2560e-04  2.8868e-02  7.0018e-01\nDavao de Oro           6.5137e-01 -1.2913e-02  8.7432e-01  7.1042e-01\nDavao del Norte        6.0817e-01 -1.0886e-02  7.3727e-01  7.2097e-01\nDavao del Sur         -1.2268e-01 -4.2264e-04  2.8667e-02 -7.2209e-01\nDavao Occidental       5.3604e-01 -1.5113e-02  1.0230e+00  5.4493e-01\nDavao Oriental         6.5452e-01 -1.2913e-02  8.7432e-01  7.1379e-01\nGuimaras              -4.6053e-01 -1.4788e-02  1.0010e+00 -4.4551e-01\nIfugao                 5.9736e-01 -1.5113e-02  1.0230e+00  6.0556e-01\nIlocos Norte           4.9328e-01 -6.4673e-03  4.3829e-01  7.5487e-01\nIlocos Sur             2.7597e-01 -1.5391e-03  1.0438e-01  8.5897e-01\nIloilo                -9.7425e-02 -1.1503e-03  7.8018e-02 -3.4468e-01\nIsabela               -2.7472e-01 -1.6393e-03  1.1117e-01 -8.1901e-01\nKalinga                5.4709e-01 -1.3835e-02  9.3661e-01  5.7960e-01\nLa Union               2.9900e-01 -4.1571e-03  2.8182e-01  5.7106e-01\nLaguna                 1.1308e+01 -8.6589e-02  5.8010e+00  4.7307e+00\nLanao del Norte        5.0830e-01 -9.2859e-03  6.2906e-01  6.5258e-01\nLanao del Sur          5.0267e-01 -7.5799e-03  5.1361e-01  7.1197e-01\nLeyte                 -5.5277e-02 -1.8677e-03  1.2666e-01 -1.5007e-01\nMaguindanao del Norte  3.2360e-01 -6.6827e-03  4.5288e-01  4.9079e-01\nMaguindanao del Sur    3.6696e-01 -8.5336e-03  5.7815e-01  4.9383e-01\nMasbate                6.3495e-01 -1.0338e-02  7.0025e-01  7.7113e-01\nMetro Manila           3.9839e+01 -4.6643e+00  1.0557e+02  4.3313e+00\nMisamis Occidental     6.9457e-01 -1.2316e-02  8.3398e-01  7.7405e-01\nMisamis Oriental       2.9609e-01 -1.5391e-03  1.0438e-01  9.2122e-01\nNegros Occidental      1.4492e-01 -1.0871e-02  7.3626e-01  1.8156e-01\nNegros Oriental       -2.9899e-01 -5.6407e-03  3.8232e-01 -4.7443e-01\nNorthern Samar         6.4146e-01 -1.4788e-02  1.0010e+00  6.5591e-01\nNueva Ecija            2.3189e+00 -7.7460e-02  5.1962e+00  1.0512e+00\nNueva Vizcaya         -1.6143e-02 -1.0610e-02  7.1864e-01 -6.5269e-03\nOccidental Mindoro    -3.5566e+00 -1.3835e-02  9.3661e-01 -3.6607e+00\nOriental Mindoro      -3.1819e+00 -1.1165e-02  7.5614e-01 -3.6463e+00\nPalawan                8.8608e-01 -1.3835e-02  9.3661e-01  9.2987e-01\nPampanga               1.5605e+00 -1.9779e-03  1.3413e-01  4.2662e+00\nPangasinan            -3.1594e-02 -4.3207e-03  2.9291e-01 -5.0394e-02\nQuezon                 3.8781e+00 -9.0179e-03  6.1093e-01  4.9731e+00\nQuirino                1.8947e-01 -1.4467e-02  9.7932e-01  2.0608e-01\nRizal                  3.6928e+00 -8.5203e-03  5.7726e-01  4.8716e+00\nSamar                 -2.2742e-01 -1.0886e-02  7.3727e-01 -2.5218e-01\nSarangani              4.5280e-01 -1.1733e-02  7.9459e-01  5.2113e-01\nSiquijor              -5.7628e-01 -1.5113e-02  1.0230e+00 -5.5483e-01\nSorsogon               5.6028e-01 -1.0338e-02  7.0025e-01  6.8190e-01\nSouth Cotabato         5.2060e-02 -1.0002e-04  6.7843e-03  6.3326e-01\nSouthern Leyte        -2.9681e-01 -1.0886e-02  7.3727e-01 -3.3299e-01\nSultan Kudarat         4.0599e-01 -8.7808e-03  5.9488e-01  5.3777e-01\nSulu                   6.3915e-01 -9.2859e-03  6.2906e-01  8.1756e-01\nSurigao del Norte      6.3908e-01 -1.2613e-02  8.5403e-01  7.0519e-01\nSurigao del Sur        8.4777e-01 -1.4467e-02  9.7932e-01  8.7129e-01\nTarlac                -2.7081e+00 -5.6407e-03  3.8232e-01 -4.3706e+00\nTawi-Tawi              6.5403e-01 -9.8051e-03  6.6418e-01  8.1455e-01\nZambales              -2.3177e+00 -4.1571e-03  2.8182e-01 -4.3580e+00\nZamboanga del Norte    6.6912e-01 -9.8051e-03  6.6418e-01  8.3307e-01\nZamboanga del Sur      3.8401e-01 -2.8994e-03  1.9660e-01  8.7260e-01\nZamboanga Sibugay      6.7440e-01 -1.0338e-02  7.0025e-01  8.1827e-01\n                      Pr.z....E.Ii..\nAbra                          0.4351\nAgusan del Norte              0.3745\nAgusan del Sur                0.3706\nAklan                         0.5307\nAlbay                         0.4451\nAntique                       0.6682\nApayao                        0.5632\nBasilan                       0.4118\nBataan                        0.0000\nBatangas                      0.0014\nBenguet                       0.8874\nBohol                         0.5890\nBukidnon                      0.5798\nBulacan                       0.0001\nCagayan                       0.4873\nCamarines Norte               0.5996\nCamarines Sur                 0.9892\nCapiz                         0.6838\nCatanduanes                   0.5088\nCavite                        0.0000\nCebu                          0.6556\nCotabato                      0.4838\nDavao de Oro                  0.4774\nDavao del Norte               0.4709\nDavao del Sur                 0.4702\nDavao Occidental              0.5858\nDavao Oriental                0.4754\nGuimaras                      0.6560\nIfugao                        0.5448\nIlocos Norte                  0.4503\nIlocos Sur                    0.3904\nIloilo                        0.7303\nIsabela                       0.4128\nKalinga                       0.5622\nLa Union                      0.5680\nLaguna                        0.0000\nLanao del Norte               0.5140\nLanao del Sur                 0.4765\nLeyte                         0.8807\nMaguindanao del Norte         0.6236\nMaguindanao del Sur           0.6214\nMasbate                       0.4406\nMetro Manila                  0.0000\nMisamis Occidental            0.4389\nMisamis Oriental              0.3569\nNegros Occidental             0.8559\nNegros Oriental               0.6352\nNorthern Samar                0.5119\nNueva Ecija                   0.2931\nNueva Vizcaya                 0.9948\nOccidental Mindoro            0.0003\nOriental Mindoro              0.0003\nPalawan                       0.3524\nPampanga                      0.0000\nPangasinan                    0.9598\nQuezon                        0.0000\nQuirino                       0.8367\nRizal                         0.0000\nSamar                         0.8009\nSarangani                     0.6023\nSiquijor                      0.5790\nSorsogon                      0.4953\nSouth Cotabato                0.5266\nSouthern Leyte                0.7391\nSultan Kudarat                0.5907\nSulu                          0.4136\nSurigao del Norte             0.4807\nSurigao del Sur               0.3836\nTarlac                        0.0000\nTawi-Tawi                     0.4153\nZambales                      0.0000\nZamboanga del Norte           0.4048\nZamboanga del Sur             0.3829\nZamboanga Sibugay             0.4132\n```\n\n\n:::\n:::\n\n\nTo visualize our local Moran's I results geographically, we first need to join the local Moran's I statistics with our spatial data. We'll add these new statistical values to our existing spatial dataframe of provinces, allowing us to create maps that show spatial clustering patterns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprovinces.localMI <- cbind(province_drug_stats_all, localMI) %>%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n```\n:::\n\n\n#### Visualisation\n\nThis code below creates a side-by-side visualization of two key aspects of our local Moran's I analysis. The left map displays the local Moran's I statistics for each province using a red-blue color scheme, where contrasting colors help identify clusters and outliers. The right map shows the statistical significance (p-values) of these patterns using varying shades of blue, with darker blues indicating higher statistical significance at different thresholds (0.001, 0.01, 0.05, and 0.1). The maps are arranged horizontally with equal aspect ratios, allowing us to simultaneously examine both the strength of spatial associations and their statistical significance across the Philippines. Province boundaries are shown with semi-transparent borders (alpha = 0.5) to maintain visibility of the underlying patterns while preserving provincial context.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlocalMI.map <- tm_shape(provinces.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"Local Moran statistics\") +\n  tm_borders(alpha = 0.5)\n\npvalue.map <- tm_shape(provinces.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"Local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(localMI.map, pvalue.map, asp=1, ncol=2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"Ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-41-1.png){width=1152}\n:::\n:::\n\n\nThe local Moran's I (Ii) tells you the direction and strength of spatial clustering. A positive Ii means that province is similar to neighbors, which means that clustering occurs, and vice versa. If the Ii is close to zero, it means that no spatial patterns are detected. p-values tell you how statistically significant the pattern is.\n\nCommon thresholds:\n\n-   p \\< 0.001: Very strong evidence\n\n-   p \\< 0.01: Strong evidence\n\n-   p \\< 0.05: Evidence\n\n-   p \\< 0.1: Weak evidence\n\n-   p \\> 0.1: No significant evidence\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(provinces.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"Local Moran statistics\") +\n  tm_borders(alpha = 0.5) +\n  tm_text(\"ADM2_EN\", col = \"orange\", size = 0.5, remove.overlap = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"Ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-42-1.png){width=960}\n:::\n:::\n\n\nIn the diagram, you can see that the province of Bulacan and the national capital region exhibit high amounts of clustering, and this is supported by their high p-values of less than 0.001, which suggests a very strong evidence of clustering.\n\nThe provinces of Bataan, Zambales, Tarlac, and Occidental Mindoro has a very strong evidence of a low amounts of clustering, supported by their negative Ii and p-values of less than 0.001.\n\n#### Conclusion\n\nThis LISA (Local Indicators of Spatial Association) analysis reveals distinct patterns of drug-related incidents in the Philippines:\n\nFirst, Bulacan and the National Capital Region show significant high-high clustering (positive Ii with p \\< 0.001), meaning these areas consistently have high numbers of drug-related incidents and are surrounded by other areas with similarly high numbers. This suggests a concentrated hot spot of drug-related activities in the metropolitan region, likely influenced by factors such as urban density, economic activity, and interconnected transportation networks.\n\nIn contrast, provinces like Bataan, Zambales, Tarlac, and Occidental Mindoro demonstrate significant low-low clustering (negative Ii with p \\< 0.001), indicating these areas have low numbers of incidents and are surrounded by areas with similarly low numbers. This pattern is particularly interesting given some of these provinces' proximity to the high-incident metro area, suggesting that certain geographic, socio-economic, or administrative factors might be effectively limiting the spread of drug-related activities into these regions.\n\nThese findings highlight the strong spatial component of drug-related incidents in the Philippines, with clear geographic patterns that could inform targeted intervention strategies and resource allocation for drug prevention and control efforts.\n\n#### Moran scatterplot\n\nIn order to better understand the nature and strength of spatial relationships in drug-related incidents across provinces, we will analyze the Moran scatterplot using standardized variables. By standardizing our data, we can interpret values in terms of standard deviations from the mean, making it easier to identify significant patterns and outliers. The Moran scatterplot will display each province's standardized drug incident rate on the x-axis against its spatially lagged standardized values (weighted average of neighboring provinces) on the y-axis. This visualization helps us identify four types of spatial associations: high-high clusters (upper-right quadrant), low-low clusters (lower-left quadrant), and spatial outliers where provinces differ significantly from their neighbors (upper-left and lower-right quadrants). Through this standardized approach, we can more intuitively interpret the relative positions of provinces and their spatial relationships.\n\nFirst, we'll standardize our variable using the `scale()` function. This process transforms our data by:\n\n1.  Centering: Subtracting the mean value from each observation\n\n2.  Scaling: Dividing each centered value by the standard deviation\n\nThis standardization allows us to express our drug incident values in terms of how many standard deviations they are from the mean, making patterns and outliers easier to identify.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprovince_drug_stats_all$Z.cases <- scale(province_drug_stats_all$num_events) %>% as.vector \n```\n:::\n\n\nThe `as.vector()` function ensures our standardized values are in a simple vector format that can be easily incorporated into our dataframe. With our data now standardized and properly formatted, we can create the Moran scatterplot to visualize spatial relationships between provinces and their neighbors.\n\nThis Moran scatterplot below shows drug incidents in each province (x-axis) against the average drug incidents in their neighboring provinces (y-axis), with both variables standardized (shown as z-scores). The plot reveals spatial patterns by dividing into quadrants\n\n``` r\nmoran.plot(x,          # The variable you're analyzing (e.g., number of drug cases)\n           listw,      # Spatial weights matrix defining neighborhood relationships\n           zero.policy = NULL,    # How to handle regions with no neighbors\n           spChk = NULL,         # Spatial weights check\n           labels = NULL,        # Labels for points (e.g., province names)\n           xlab = NULL,         # Label for x-axis\n           ylab = NULL,         # Label for y-axis\n           quiet = NULL)        # Whether to suppress messages\n```\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnci <- moran.plot(province_drug_stats_all$Z.cases, knn_lw,\n                   labels=as.character(province_drug_stats_all$ADM2_EN),\n                   xlab=\"z-cases 2012\",\n                   ylab=\"Spatially Lagged z-cases\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-44-1.png){width=672}\n:::\n:::\n\n\n-   **Upper-right (HH)**: Provinces with high drug incidents near other high-incident provinces\n\n-   **Lower-left (LL)**: Provinces with low drug incidents near other low-incident provinces\n\n-   **Lower-right (HL)**: High-incident provinces surrounded by low-incident provinces (spatial outliers)\n\n-   **Upper-left (LH)**: Low-incident provinces surrounded by high-incident provinces (spatial outliers)\n\n#### Plotting LISA map\n\nLet's create a LISA (Local Indicators of Spatial Association) cluster map to visualize significant spatial clusters and outliers of drug-related incidents across provinces.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nquadrant <- vector(mode=\"numeric\",length=nrow(localMI))\n```\n:::\n\n\nWe'll then calculate the weighted average of drug cases in neighboring provinces (spatial lag) and standardize these values by centering them around their mean. This allows us to compare each province's values with the average of its neighbours.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprovince_drug_stats_all$lag_cases <- lag.listw(knn_lw, province_drug_stats_all$num_events)\nDV <- province_drug_stats_all$lag_cases - mean(province_drug_stats_all$lag_cases)     \n```\n:::\n\n\nNext, we'll standardize the local Moran's I values by centering them around their mean, making it easier to identify significant deviations from average spatial patterns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nLM_I <- localMI[,1] - mean(localMI[,1])\n```\n:::\n\n\nLet's then establish a significance threshold (p-value) to determine which local Moran's I values represent statistically significant spatial patterns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsignif <- 0.05\n```\n:::\n\n\nLet's identify the four types of spatial clusters:\n\n-   Low-Low (1): Provinces with low values near other low values\n\n-   Low-High (2): Provinces with low values near high values\n\n-   High-Low (3): Provinces with high values near low values\n\n-   High-High (4): Provinces with high values near other high values\n\n\n::: {.cell}\n\n```{.r .cell-code}\nquadrant[DV <0 & LM_I>0] <- 1\nquadrant[DV >0 & LM_I<0] <- 2\nquadrant[DV <0 & LM_I<0] <- 3\nquadrant[DV >0 & LM_I>0] <- 4\n```\n:::\n\n\nFinally, we'll assign a value of 0 to provinces where the local Moran's I values are not statistically significant, indicating areas with no clear spatial clustering pattern.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nquadrant[localMI[,5]>signif] <- 0\n```\n:::\n\n\nLet's create a map to visualize these LISA (Local Indicators of Spatial Association) classifications, showing where significant spatial clusters and outliers occur across the Philippines.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncases <- qtm(province_drug_stats_all, \"num_events\")\n\nprovinces.localMI$quadrant <- quadrant\ncolors <- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters <- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap <- tm_shape(provinces.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\ntmap_arrange(cases, LISAmap, \n             asp=1, ncol=2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-51-1.png){width=1152}\n:::\n:::\n\n\nLow-high: Regions with low values and neighboring regions with high values (negative deviation with positive local Moran’s I). This quadrant identifies low-value outliers surrounded by high-value areas.\n\nHigh-low: Regions with high values and neighboring regions with low values (positive deviation with negative local Moran’s I). This quadrant identifies high-value outliers surrounded by low-value areas.\n\nLow-low: Regions with low values and neighboring regions also with low values (negative deviation with negative local Moran’s I). This identifies clusters of low values, where both the region and its neighbors have similarly low values.\n\nHigh-high: Regions with high values and neighboring regions also with high values (positive deviation with positive local Moran’s I). This identifies clusters of high values, where both the region and its neighbors have high values.\n\nHigh-high and low-low are considered clusters. High-low and low-high are considered outliers.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(provinces.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_text(\"ADM2_EN\", col = \"yellow\", size = 0.5, remove.overlap = TRUE) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-52-1.png){width=960}\n:::\n:::\n\n\nThe LISA analysis reveals a distinct spatial pattern centered around Metro Manila, where multiple provinces exhibit high-high clustering, indicating a concentrated area of drug-related incidents that spans across neighboring provinces. In contrast, provinces like Bataan, Occidental Mindoro, Bataan, Zambales, and Tarlac emerge as low-high outliers, maintaining lower incident rates despite their proximity to areas of high drug-related activity.\n\nThe distinct spatial patterns revealed by the LISA analysis suggest that drug-related incidents in the Philippines follow a complex geographic distribution that isn't solely determined by proximity to high-incident areas. The strong high-high clustering around Metro Manila indicates that urban agglomeration, shared infrastructure, and interconnected socio-economic networks likely facilitate the concentration of drug-related activities in the metropolitan region.\n\nHowever, the presence of low-high outliers (Bataan, Occidental Mindoro, Zambales, and Tarlac) demonstrates that proximity to high-incident areas doesn't inevitably lead to high numbers of drug-related incidents. These provinces' success in maintaining lower rates despite their location near Metro Manila's hot spot suggests that local factors such as effective enforcement strategies, geographic barriers, or distinct socio-economic conditions can successfully mitigate the spread of drug-related activities. This finding is particularly significant as it indicates that local interventions and characteristics can overcome the influence of neighboring high-incident areas.\n\nThese patterns suggest that drug prevention and control strategies should be tailored to local contexts rather than assuming a one-size-fits-all approach. Understanding how these low-high outlier provinces maintain their status could provide valuable insights for developing effective intervention strategies in other regions facing similar challenges.\n\n### Getis-Ord Gi Statistic\n\nHotspot and coldspot analysis is a spatial statistical method used to pinpoint areas where high or low values of a specific variable cluster together geographically. It aids in uncovering significant spatial patterns, emphasizing regions where extreme values, either high or low, are concentrated.\n\nWe need to use data from nearest neighbour column to calculate the inverse of the distance between each neighbour.\n\nAreas with higher Gi values in Getis-Ord Gi analysis represent hotspots, in which regions with a higher than expected GDP per capita cluster together. Note that hotspots and coldspots are not considered outliers.\n\nSince we are using adaptive distance earlier, we will similarly use adaptive distance weights for the sake of consistency.\n\nThis code below calculates the Getis-Ord Gi\\* statistic for each province to identify significant hot spots and cold spots of drug-related incidents across the Philippines. Using our k-nearest neighbors spatial weights, the `localG()` function computes these statistics for each province based on their drug incident counts. We then append these Gi\\* values to our existing provincial dataset and rename the new column to 'gstat_adaptive', creating a comprehensive dataset that includes both our original data and the hot spot analysis results. This analysis will help us identify where significantly high or low numbers of drug-related incidents are clustering geographically.\n\n``` r\nlocalG(x,           # The variable you're analyzing (e.g., number of drug cases)\n       listw,       # Spatial weights matrix defining neighborhood relationships\n       zero.policy = NULL,     # How to handle regions with no neighbors\n       spChk = NULL,          # Spatial weights check\n       return_internals = FALSE)  # Whether to return internal calculations\n```\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngi.adaptive <- localG(province_drug_stats_all$num_events, knn_lw)\ncases.gi <- cbind(province_drug_stats_all, as.matrix(gi.adaptive)) %>%\n  rename(gstat_adaptive = as.matrix.gi.adaptive.)\n```\n:::\n\n\nLet's create a choropleth map using the `tmap` package to visualize where significant hot spots and cold spots of drug-related incidents are located across the Philippines. This visualization will display the Gi\\* statistics we calculated using our k-nearest neighbor weights, helping us identify areas with unusually high or low concentrations of drug-related incidents.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGimap <- tm_shape(cases.gi) + \n  tm_fill(col = \"gstat_adaptive\", \n          style = \"pretty\", \n          palette=\"-RdBu\", \n          title = \"local Gi\") + \n  tm_borders(alpha = 0.5)\n\ntmap_arrange(cases, \n             Gimap, \n             asp=1, \n             ncol=2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"gstat_adaptive\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-54-1.png){width=1152}\n:::\n:::\n\n\nA high Gi value (positive z-score) indicates a hotspot, meaning the area has a concentration of high values (e.g., high number of drug cases) surrounded by other areas with similarly high values. This means that not only is the value in that area high, but the surrounding areas also exhibit high values, forming a cluster of high-intensity activity.\n\nA low Gi value (negative z-score) indicates a coldspot, meaning the area has a concentration of low values surrounded by other areas with similarly low values. A low cluster suggests that the area and its neighbors are consistently below the overall average, indicating a region of low intensity.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(cases.gi) + \n  tm_fill(col = \"gstat_adaptive\", \n          style = \"pretty\", \n          palette=\"-RdBu\", \n          title = \"local Gi\") + \n  tm_borders(alpha = 0.5) +\n  tm_text(\"ADM2_EN\", col = \"yellow\", size = 0.5, remove.overlap = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"gstat_adaptive\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-55-1.png){width=960}\n:::\n:::\n\n\nThe Getis-Ord Gi\\* statistics reveal a clear core-periphery pattern of drug-related incidents in the Philippines, with the highest concentrations forming a contiguous region around Metro Manila. The provinces with the highest Gi\\* values (4-5) form a concentrated cluster including Metro Manila and its immediately surrounding provinces, suggesting that drug-related activities are most intense in this highly urbanized, interconnected region.\n\nThis pattern demonstrates a clear spatial gradient, with Gi\\* values gradually decreasing as distance from Metro Manila increases. The moderately high values (3-4) in provinces like Occidental Mindoro, Oriental Mindoro, Batangas, and Bulacan represent a transition zone, while provinces in the Visayas region (like Antique, Capiz, Iloilo) show significantly lower values (0-1). The lowest values (-1-0) are found in the most distant provinces, indicating that the influence of Metro Manila's drug-related patterns diminishes substantially with distance.\n\nThis spatial distribution strongly suggests that drug-related incidents are influenced by factors associated with urbanization, population density, and proximity to the capital region. The clear geographic pattern implies that intervention strategies should be regionally coordinated but tailored to the different intensity levels observed across the country, with particularly intensive efforts focused on the high-value cluster around Metro Manila while maintaining preventive measures in lower-value areas.\n\n# Conclusion\n\nThe comprehensive spatial analysis of drug-related incidents in the Philippines demonstrates that geographic location plays a crucial role in their distribution, with clear patterns of concentration rather than random dispersion across the country. Multiple analytical methods consistently reveal a primary hot spot centered on Metro Manila and its surrounding provinces, with incident rates generally decreasing as distance from the capital region increases. However, this pattern is not uniform, as evidenced by several noteworthy exceptions such as Bataan and Occidental Mindoro, which maintain lower incident rates despite their proximity to high-incident areas, suggesting the effectiveness of local factors in mitigating drug-related activities.\n\nThese findings point to the need for a nuanced approach to drug prevention and control strategies. Rather than implementing uniform policies across all provinces, interventions should combine coordinated regional efforts, particularly around the Metro Manila cluster, with targeted local approaches informed by the success of outlier provinces. The clear spatial patterns indicate that resources and enforcement efforts should be strategically allocated, with intensive focus on identified hot spots while maintaining preventive measures in lower-incident areas. Additionally, the success of certain provinces in maintaining lower incident rates despite challenging geographic contexts offers valuable lessons that could be studied and potentially replicated in other regions.\n\nThe strong influence of geographic location on drug-related incidents, combined with the existence of successful outlier provinces, suggests that while spatial proximity to high-incident areas creates risk, it does not inevitably lead to high incident rates. This understanding should inform the development of more effective, geographically-aware intervention strategies that acknowledge both regional patterns and local capabilities in addressing drug-related challenges across the Philippines.\n",
    "supporting": [
      "Take-home_Ex03_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}