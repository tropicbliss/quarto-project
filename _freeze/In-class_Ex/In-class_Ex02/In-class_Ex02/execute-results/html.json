{
  "hash": "9380edf5f7e1e6edb0667ad89c6f1db3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Exercise 2\"\nauthor: \"Eugene Toh\"\ndate: \"last-modified\"\nexecute:\n  freeze: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, sf, tmap)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz <- st_read(dsn = \"data/geospatial\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/home/tropicbliss/GitHub/quarto-project/In-class_Ex/In-class_Ex02/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n\n\n:::\n:::\n\n\n-   Simple features are represented via \"simple features geometry (SFG)\", and they and geospatial data can be represented with \"simple features objects (SFO)\" which represent a collection of SFG as a data-frame object. The non-spatial data (metadata) are stored in a separate column separate from the SFG column. The data type of that SFG column is known as \"simple features collection (SFC)\".\n\n-   SFO is an object, you can get the class by passing in a variable to the `class` function.\n\n-   In the environments tab, \"obs\" stands for observations which is basically the number of rows. \"Variables\" represent the number of columns.\n\n-   The data types you will be working with for each column would be:\n\n    -   `int`\n\n    -   `chr`\n\n        -   Basically a string.\n\n    -   `Date`\n\n    -   `num`\n\n        -   A superclass of `int` and `double`. R will automatically cast it to its child classes if needed, but this is basically a generic number class.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz2019 <- st_read(dsn = \"data/geospatial/MasterPlan2019SubzoneBoundaryNoSeaKML.kml\") %>% st_transform(crs = 3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `URA_MP19_SUBZONE_NO_SEA_PL' from data source \n  `/home/tropicbliss/GitHub/quarto-project/In-class_Ex/In-class_Ex02/data/geospatial/MasterPlan2019SubzoneBoundaryNoSeaKML.kml' \n  using driver `LIBKML'\nSimple feature collection with 332 features and 22 fields\nGeometry type: MULTIPOLYGON\nDimension:     XYZ\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\nIf you look at the KML version, you can see that it is less tidier than the Shapefile version.\n\n```         \n<center><table><tr><th colspan='2' align='center'><em>Attributes</â€¦\n```\n\nYou'll have to manually parse and extract the data. Hence, the Shapefile version will be the one we are going to use.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz)+\n  tm_fill(\"REGION_N\", \n          style = \"quantile\",\n          palette = \"plasma\",\n          title = \"Subzones\") +\n  tm_layout(main.title = \"Planning subzones of Singapore (2014)\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\")\n```\n\n::: {.cell-output-display}\n![](In-class_Ex02_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npreschool = st_read(\"data/geospatial/PreSchoolsLocation.kml\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `/home/tropicbliss/GitHub/quarto-project/In-class_Ex/In-class_Ex02/data/geospatial/PreSchoolsLocation.kml' \n  using driver `LIBKML'\nSimple feature collection with 2290 features and 16 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\npreschool3414 <- st_transform(preschool, crs = 3414)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata <- st_read(\"data/aspatial/respopagesextod2023.csv\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `respopagesextod2023' from data source \n  `/home/tropicbliss/GitHub/quarto-project/In-class_Ex/In-class_Ex02/data/aspatial/respopagesextod2023.csv' \n  using driver `CSV'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: no simple feature geometries present: returning a data.frame or tbl_df\n```\n\n\n:::\n\n```{.r .cell-code}\npopdata2023 <- popdata %>%\n  group_by(PA, SZ, AG)\n```\n:::\n",
    "supporting": [
      "In-class_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}